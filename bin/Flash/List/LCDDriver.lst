###############################################################################
#                                                                             #
#                                                       28/May/2013  20:10:12 #
# IAR ANSI C/C++ Compiler V6.30.4.23288/W32 EVALUATION for ARM                #
# Copyright 1999-2011 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Administrator\Desktop\jack15.4\src\Sources\C\LC #
#                    DDriver.c                                                #
#    Command line =  C:\Users\Administrator\Desktop\jack15.4\src\Sources\C\LC #
#                    DDriver.c -D IAR -D TWR_K60N512 -lCN                     #
#                    C:\Users\Administrator\Desktop\jack15.4\bin\Flash\List\  #
#                    -lB C:\Users\Administrator\Desktop\jack15.4\bin\Flash\Li #
#                    st\ -o C:\Users\Administrator\Desktop\jack15.4\bin\Flash #
#                    \Obj\ --no_cse --no_unroll --no_inline --no_code_motion  #
#                    --no_tbaa --no_clustering --no_scheduling --debug        #
#                    --endian=little --cpu=Cortex-M4 -e --fpu=None            #
#                    --dlib_config G:\irm\arm\INC\c\DLib_Config_Normal.h -I   #
#                    C:\Users\Administrator\Desktop\jack15.4\src\Sources\H\   #
#                    -I C:\Users\Administrator\Desktop\jack15.4\src\Sources\H #
#                    \Component_H\ -I C:\Users\Administrator\Desktop\jack15.4 #
#                    \src\Sources\H\Frame_H\ -Ol --use_c++_inline             #
#    List file    =  C:\Users\Administrator\Desktop\jack15.4\bin\Flash\List\L #
#                    CDDriver.lst                                             #
#    Object file  =  C:\Users\Administrator\Desktop\jack15.4\bin\Flash\Obj\LC #
#                    DDriver.o                                                #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Administrator\Desktop\jack15.4\src\Sources\C\LCDDriver.c
      1          #include "MK60N512VMD100.h " /* include peripheral declarations */
      2          #include"LCDDriver.h"
      3          #include "common.h"
      4          
      5          #define X_WIDTH 128
      6          #define Y_WIDTH 64
      7          //======================================
      8          // 128X64IÒº¾§µ×²ãÇý¶¯[6X8]×ÖÌå¿â

   \                                 In section .rodata, align 4
      9          const unsigned char F6x8[][6] =
   \                     F6x8:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 47, 0, 0, 0, 0, 7, 0, 7, 0, 0, 20, 127
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x2F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x07 0x00    
   \              0x07 0x00    
   \              0x00 0x14    
   \              0x7F         
   \   00000015   0x14 0x7F          DC8 20, 127, 20, 0, 36, 42, 127, 42, 18, 0, 98, 100, 8, 19, 35, 0, 54
   \              0x14 0x00    
   \              0x24 0x2A    
   \              0x7F 0x2A    
   \              0x12 0x00    
   \              0x62 0x64    
   \              0x08 0x13    
   \              0x23 0x00    
   \              0x36         
   \   00000026   0x49 0x55          DC8 73, 85, 34, 80, 0, 0, 5, 3, 0, 0, 0, 0, 28, 34, 65, 0, 0, 0, 65, 34
   \              0x22 0x50    
   \              0x00 0x00    
   \              0x05 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x00    
   \              0x00 0x00    
   \              0x41 0x22    
   \   0000003A   0x1C 0x00          DC8 28, 0, 0, 20, 8, 62, 8, 20, 0, 8, 8, 62, 8, 8, 0, 0, 0, 160, 96, 0
   \              0x00 0x14    
   \              0x08 0x3E    
   \              0x08 0x14    
   \              0x00 0x08    
   \              0x08 0x3E    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0xA0    
   \              0x60 0x00    
   \   0000004E   0x00 0x08          DC8 0, 8, 8, 8, 8, 8, 0, 0, 96, 96, 0, 0, 0, 32, 16, 8, 4, 2, 0, 62, 81
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x60 0x60    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \              0x00 0x3E    
   \              0x51         
   \   00000063   0x49 0x45          DC8 73, 69, 62, 0, 0, 66, 127, 64, 0, 0, 66, 97, 81, 73, 70, 0, 33, 65
   \              0x3E 0x00    
   \              0x00 0x42    
   \              0x7F 0x40    
   \              0x00 0x00    
   \              0x42 0x61    
   \              0x51 0x49    
   \              0x46 0x00    
   \              0x21 0x41    
   \   00000075   0x45 0x4B          DC8 69, 75, 49, 0, 24, 20, 18, 127, 16, 0, 39, 69, 69, 69, 57, 0, 60
   \              0x31 0x00    
   \              0x18 0x14    
   \              0x12 0x7F    
   \              0x10 0x00    
   \              0x27 0x45    
   \              0x45 0x45    
   \              0x39 0x00    
   \              0x3C         
   \   00000086   0x4A 0x49          DC8 74, 73, 73, 48, 0, 1, 113, 9, 5, 3, 0, 54, 73, 73, 73, 54, 0, 6, 73
   \              0x49 0x30    
   \              0x00 0x01    
   \              0x71 0x09    
   \              0x05 0x03    
   \              0x00 0x36    
   \              0x49 0x49    
   \              0x49 0x36    
   \              0x00 0x06    
   \              0x49         
   \   00000099   0x49 0x29          DC8 73, 41, 30, 0, 0, 54, 54, 0, 0, 0, 0, 86, 54, 0, 0, 0, 8, 20, 34
   \              0x1E 0x00    
   \              0x00 0x36    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x00 0x56    
   \              0x36 0x00    
   \              0x00 0x00    
   \              0x08 0x14    
   \              0x22         
   \   000000AC   0x41 0x00          DC8 65, 0, 0, 20, 20, 20, 20, 20, 0, 0, 65, 34, 20, 8, 0, 2, 1, 81, 9
   \              0x00 0x14    
   \              0x14 0x14    
   \              0x14 0x14    
   \              0x00 0x00    
   \              0x41 0x22    
   \              0x14 0x08    
   \              0x00 0x02    
   \              0x01 0x51    
   \              0x09         
   \   000000BF   0x06 0x00          DC8 6, 0, 50, 73, 89, 81, 62, 0, 124, 18, 17, 18, 124, 0, 127, 73, 73
   \              0x32 0x49    
   \              0x59 0x51    
   \              0x3E 0x00    
   \              0x7C 0x12    
   \              0x11 0x12    
   \              0x7C 0x00    
   \              0x7F 0x49    
   \              0x49         
   \   000000D0   0x49 0x36          DC8 73, 54, 0, 62, 65, 65, 65, 34, 0, 127, 65, 65, 34, 28, 0, 127, 73
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x22    
   \              0x00 0x7F    
   \              0x41 0x41    
   \              0x22 0x1C    
   \              0x00 0x7F    
   \              0x49         
   \   000000E1   0x49 0x49          DC8 73, 73, 65, 0, 127, 9, 9, 9, 1, 0, 62, 65, 73, 73, 122, 0, 127, 8
   \              0x41 0x00    
   \              0x7F 0x09    
   \              0x09 0x09    
   \              0x01 0x00    
   \              0x3E 0x41    
   \              0x49 0x49    
   \              0x7A 0x00    
   \              0x7F 0x08    
   \   000000F3   0x08 0x08          DC8 8, 8, 127, 0, 0, 65, 127, 65, 0, 0, 32, 64, 65, 63, 1, 0, 127, 8
   \              0x7F 0x00    
   \              0x00 0x41    
   \              0x7F 0x41    
   \              0x00 0x00    
   \              0x20 0x40    
   \              0x41 0x3F    
   \              0x01 0x00    
   \              0x7F 0x08    
   \   00000105   0x14 0x22          DC8 20, 34, 65, 0, 127, 64, 64, 64, 64, 0, 127, 2, 12, 2, 127, 0, 127
   \              0x41 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x40 0x00    
   \              0x7F 0x02    
   \              0x0C 0x02    
   \              0x7F 0x00    
   \              0x7F         
   \   00000116   0x04 0x08          DC8 4, 8, 16, 127, 0, 62, 65, 65, 65, 62, 0, 127, 9, 9, 9, 6, 0, 62, 65
   \              0x10 0x7F    
   \              0x00 0x3E    
   \              0x41 0x41    
   \              0x41 0x3E    
   \              0x00 0x7F    
   \              0x09 0x09    
   \              0x09 0x06    
   \              0x00 0x3E    
   \              0x41         
   \   00000129   0x51 0x21          DC8 81, 33, 94, 0, 127, 9, 25, 41, 70, 0, 70, 73, 73, 73, 49, 0, 1, 1
   \              0x5E 0x00    
   \              0x7F 0x09    
   \              0x19 0x29    
   \              0x46 0x00    
   \              0x46 0x49    
   \              0x49 0x49    
   \              0x31 0x00    
   \              0x01 0x01    
   \   0000013B   0x7F 0x01          DC8 127, 1, 1, 0, 63, 64, 64, 64, 63, 0, 31, 32, 64, 32, 31, 0, 63, 64
   \              0x01 0x00    
   \              0x3F 0x40    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x1F 0x20    
   \              0x40 0x20    
   \              0x1F 0x00    
   \              0x3F 0x40    
   \   0000014D   0x38 0x40          DC8 56, 64, 63, 0, 99, 20, 8, 20, 99, 0, 7, 8, 112, 8, 7, 0, 97, 81, 73
   \              0x3F 0x00    
   \              0x63 0x14    
   \              0x08 0x14    
   \              0x63 0x00    
   \              0x07 0x08    
   \              0x70 0x08    
   \              0x07 0x00    
   \              0x61 0x51    
   \              0x49         
   \   00000160   0x45 0x43          DC8 69, 67, 0, 0, 127, 65, 65, 0, 0, 85, 42, 85, 42, 85, 0, 0, 65, 65
   \              0x00 0x00    
   \              0x7F 0x41    
   \              0x41 0x00    
   \              0x00 0x55    
   \              0x2A 0x55    
   \              0x2A 0x55    
   \              0x00 0x00    
   \              0x41 0x41    
   \   00000172   0x7F 0x00          DC8 127, 0, 0, 4, 2, 1, 2, 4, 0, 64, 64, 64, 64, 64, 0, 0, 1, 2, 4, 0
   \              0x00 0x04    
   \              0x02 0x01    
   \              0x02 0x04    
   \              0x00 0x40    
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x00    
   \   00000186   0x00 0x20          DC8 0, 32, 84, 84, 84, 120, 0, 127, 72, 68, 68, 56, 0, 56, 68, 68, 68
   \              0x54 0x54    
   \              0x54 0x78    
   \              0x00 0x7F    
   \              0x48 0x44    
   \              0x44 0x38    
   \              0x00 0x38    
   \              0x44 0x44    
   \              0x44         
   \   00000197   0x20 0x00          DC8 32, 0, 56, 68, 68, 72, 127, 0, 56, 84, 84, 84, 24, 0, 8, 126, 9, 1
   \              0x38 0x44    
   \              0x44 0x48    
   \              0x7F 0x00    
   \              0x38 0x54    
   \              0x54 0x54    
   \              0x18 0x00    
   \              0x08 0x7E    
   \              0x09 0x01    
   \   000001A9   0x02 0x00          DC8 2, 0, 24, 164, 164, 164, 124, 0, 127, 8, 4, 4, 120, 0, 0, 68, 125
   \              0x18 0xA4    
   \              0xA4 0xA4    
   \              0x7C 0x00    
   \              0x7F 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x00 0x44    
   \              0x7D         
   \   000001BA   0x40 0x00          DC8 64, 0, 0, 64, 128, 132, 125, 0, 0, 127, 16, 40, 68, 0, 0, 0, 65
   \              0x00 0x40    
   \              0x80 0x84    
   \              0x7D 0x00    
   \              0x00 0x7F    
   \              0x10 0x28    
   \              0x44 0x00    
   \              0x00 0x00    
   \              0x41         
   \   000001CB   0x7F 0x40          DC8 127, 64, 0, 0, 124, 4, 24, 4, 120, 0, 124, 8, 4, 4, 120, 0, 56, 68
   \              0x00 0x00    
   \              0x7C 0x04    
   \              0x18 0x04    
   \              0x78 0x00    
   \              0x7C 0x08    
   \              0x04 0x04    
   \              0x78 0x00    
   \              0x38 0x44    
   \   000001DD   0x44 0x44          DC8 68, 68, 56, 0, 252, 36, 36, 36, 24, 0, 24, 36, 36, 24, 252, 0, 124
   \              0x38 0x00    
   \              0xFC 0x24    
   \              0x24 0x24    
   \              0x18 0x00    
   \              0x18 0x24    
   \              0x24 0x18    
   \              0xFC 0x00    
   \              0x7C         
   \   000001EE   0x08 0x04          DC8 8, 4, 4, 8, 0, 72, 84, 84, 84, 32, 0, 4, 63, 68, 64, 32, 0, 60, 64
   \              0x04 0x08    
   \              0x00 0x48    
   \              0x54 0x54    
   \              0x54 0x20    
   \              0x00 0x04    
   \              0x3F 0x44    
   \              0x40 0x20    
   \              0x00 0x3C    
   \              0x40         
   \   00000201   0x40 0x20          DC8 64, 32, 124, 0, 28, 32, 64, 32, 28, 0, 60, 64, 48, 64, 60, 0, 68
   \              0x7C 0x00    
   \              0x1C 0x20    
   \              0x40 0x20    
   \              0x1C 0x00    
   \              0x3C 0x40    
   \              0x30 0x40    
   \              0x3C 0x00    
   \              0x44         
   \   00000212   0x28 0x10          DC8 40, 16, 40, 68, 0, 28, 160, 160, 160, 124, 0, 68, 100, 84, 76, 68
   \              0x28 0x44    
   \              0x00 0x1C    
   \              0xA0 0xA0    
   \              0xA0 0x7C    
   \              0x00 0x44    
   \              0x64 0x54    
   \              0x4C 0x44    
   \   00000222   0x14 0x14          DC8 20, 20, 20, 20, 20, 20
   \              0x14 0x14    
   \              0x14 0x14    
     10          {
     11              { 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 },   // sp
     12              { 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00 },   // !
     13              { 0x00, 0x00, 0x07, 0x00, 0x07, 0x00 },   // "
     14              { 0x00, 0x14, 0x7f, 0x14, 0x7f, 0x14 },   // #
     15              { 0x00, 0x24, 0x2a, 0x7f, 0x2a, 0x12 },   // $
     16              { 0x00, 0x62, 0x64, 0x08, 0x13, 0x23 },   // %
     17              { 0x00, 0x36, 0x49, 0x55, 0x22, 0x50 },   // &
     18              { 0x00, 0x00, 0x05, 0x03, 0x00, 0x00 },   // '
     19              { 0x00, 0x00, 0x1c, 0x22, 0x41, 0x00 },   // (
     20              { 0x00, 0x00, 0x41, 0x22, 0x1c, 0x00 },   // )
     21              { 0x00, 0x14, 0x08, 0x3E, 0x08, 0x14 },   // *
     22              { 0x00, 0x08, 0x08, 0x3E, 0x08, 0x08 },   // +
     23              { 0x00, 0x00, 0x00, 0xA0, 0x60, 0x00 },   // ,
     24              { 0x00, 0x08, 0x08, 0x08, 0x08, 0x08 },   // -
     25              { 0x00, 0x00, 0x60, 0x60, 0x00, 0x00 },   // .
     26              { 0x00, 0x20, 0x10, 0x08, 0x04, 0x02 },   // /
     27              { 0x00, 0x3E, 0x51, 0x49, 0x45, 0x3E },   // 0
     28              { 0x00, 0x00, 0x42, 0x7F, 0x40, 0x00 },   // 1
     29              { 0x00, 0x42, 0x61, 0x51, 0x49, 0x46 },   // 2
     30              { 0x00, 0x21, 0x41, 0x45, 0x4B, 0x31 },   // 3
     31              { 0x00, 0x18, 0x14, 0x12, 0x7F, 0x10 },   // 4
     32              { 0x00, 0x27, 0x45, 0x45, 0x45, 0x39 },   // 5
     33              { 0x00, 0x3C, 0x4A, 0x49, 0x49, 0x30 },   // 6
     34              { 0x00, 0x01, 0x71, 0x09, 0x05, 0x03 },   // 7
     35              { 0x00, 0x36, 0x49, 0x49, 0x49, 0x36 },   // 8
     36              { 0x00, 0x06, 0x49, 0x49, 0x29, 0x1E },   // 9
     37              { 0x00, 0x00, 0x36, 0x36, 0x00, 0x00 },   // :
     38              { 0x00, 0x00, 0x56, 0x36, 0x00, 0x00 },   // ;
     39              { 0x00, 0x08, 0x14, 0x22, 0x41, 0x00 },   // <
     40              { 0x00, 0x14, 0x14, 0x14, 0x14, 0x14 },   // =
     41              { 0x00, 0x00, 0x41, 0x22, 0x14, 0x08 },   // >
     42              { 0x00, 0x02, 0x01, 0x51, 0x09, 0x06 },   // ?
     43              { 0x00, 0x32, 0x49, 0x59, 0x51, 0x3E },   // @
     44              { 0x00, 0x7C, 0x12, 0x11, 0x12, 0x7C },   // A
     45              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x36 },   // B
     46              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x22 },   // C
     47              { 0x00, 0x7F, 0x41, 0x41, 0x22, 0x1C },   // D
     48              { 0x00, 0x7F, 0x49, 0x49, 0x49, 0x41 },   // E
     49              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x01 },   // F
     50              { 0x00, 0x3E, 0x41, 0x49, 0x49, 0x7A },   // G
     51              { 0x00, 0x7F, 0x08, 0x08, 0x08, 0x7F },   // H
     52              { 0x00, 0x00, 0x41, 0x7F, 0x41, 0x00 },   // I
     53              { 0x00, 0x20, 0x40, 0x41, 0x3F, 0x01 },   // J
     54              { 0x00, 0x7F, 0x08, 0x14, 0x22, 0x41 },   // K
     55              { 0x00, 0x7F, 0x40, 0x40, 0x40, 0x40 },   // L
     56              { 0x00, 0x7F, 0x02, 0x0C, 0x02, 0x7F },   // M
     57              { 0x00, 0x7F, 0x04, 0x08, 0x10, 0x7F },   // N
     58              { 0x00, 0x3E, 0x41, 0x41, 0x41, 0x3E },   // O
     59              { 0x00, 0x7F, 0x09, 0x09, 0x09, 0x06 },   // P
     60              { 0x00, 0x3E, 0x41, 0x51, 0x21, 0x5E },   // Q
     61              { 0x00, 0x7F, 0x09, 0x19, 0x29, 0x46 },   // R
     62              { 0x00, 0x46, 0x49, 0x49, 0x49, 0x31 },   // S
     63              { 0x00, 0x01, 0x01, 0x7F, 0x01, 0x01 },   // T
     64              { 0x00, 0x3F, 0x40, 0x40, 0x40, 0x3F },   // U
     65              { 0x00, 0x1F, 0x20, 0x40, 0x20, 0x1F },   // V
     66              { 0x00, 0x3F, 0x40, 0x38, 0x40, 0x3F },   // W
     67              { 0x00, 0x63, 0x14, 0x08, 0x14, 0x63 },   // X
     68              { 0x00, 0x07, 0x08, 0x70, 0x08, 0x07 },   // Y
     69              { 0x00, 0x61, 0x51, 0x49, 0x45, 0x43 },   // Z
     70              { 0x00, 0x00, 0x7F, 0x41, 0x41, 0x00 },   // [
     71              { 0x00, 0x55, 0x2A, 0x55, 0x2A, 0x55 },   // 55
     72              { 0x00, 0x00, 0x41, 0x41, 0x7F, 0x00 },   // ]
     73              { 0x00, 0x04, 0x02, 0x01, 0x02, 0x04 },   // ^
     74              { 0x00, 0x40, 0x40, 0x40, 0x40, 0x40 },   // _
     75              { 0x00, 0x00, 0x01, 0x02, 0x04, 0x00 },   // '
     76              { 0x00, 0x20, 0x54, 0x54, 0x54, 0x78 },   // a
     77              { 0x00, 0x7F, 0x48, 0x44, 0x44, 0x38 },   // b
     78              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x20 },   // c
     79              { 0x00, 0x38, 0x44, 0x44, 0x48, 0x7F },   // d
     80              { 0x00, 0x38, 0x54, 0x54, 0x54, 0x18 },   // e
     81              { 0x00, 0x08, 0x7E, 0x09, 0x01, 0x02 },   // f
     82              { 0x00, 0x18, 0xA4, 0xA4, 0xA4, 0x7C },   // g
     83              { 0x00, 0x7F, 0x08, 0x04, 0x04, 0x78 },   // h
     84              { 0x00, 0x00, 0x44, 0x7D, 0x40, 0x00 },   // i
     85              { 0x00, 0x40, 0x80, 0x84, 0x7D, 0x00 },   // j
     86              { 0x00, 0x7F, 0x10, 0x28, 0x44, 0x00 },   // k
     87              { 0x00, 0x00, 0x41, 0x7F, 0x40, 0x00 },   // l
     88              { 0x00, 0x7C, 0x04, 0x18, 0x04, 0x78 },   // m
     89              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x78 },   // n
     90              { 0x00, 0x38, 0x44, 0x44, 0x44, 0x38 },   // o
     91              { 0x00, 0xFC, 0x24, 0x24, 0x24, 0x18 },   // p
     92              { 0x00, 0x18, 0x24, 0x24, 0x18, 0xFC },   // q
     93              { 0x00, 0x7C, 0x08, 0x04, 0x04, 0x08 },   // r
     94              { 0x00, 0x48, 0x54, 0x54, 0x54, 0x20 },   // s
     95              { 0x00, 0x04, 0x3F, 0x44, 0x40, 0x20 },   // t
     96              { 0x00, 0x3C, 0x40, 0x40, 0x20, 0x7C },   // u
     97              { 0x00, 0x1C, 0x20, 0x40, 0x20, 0x1C },   // v
     98              { 0x00, 0x3C, 0x40, 0x30, 0x40, 0x3C },   // w
     99              { 0x00, 0x44, 0x28, 0x10, 0x28, 0x44 },   // x
    100              { 0x00, 0x1C, 0xA0, 0xA0, 0xA0, 0x7C },   // y
    101              { 0x00, 0x44, 0x64, 0x54, 0x4C, 0x44 },   // z
    102              { 0x14, 0x14, 0x14, 0x14, 0x14, 0x14 }    // horiz lines
    103          };
    104          //======================================================
    105          // 128X64IÒº¾§µ×²ãÇý¶¯[8X16]×ÖÌå¿â
    106          // Éè¼ÆÕß: powerint
    107          // Ãè  Êö: [8X16]Î÷ÎÄ×Ö·ûµÄ×ÖÄ£Êý¾Ý (×ÝÏòÈ¡Ä£,×Ö½Úµ¹Ðò)
    108          // !"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~
    109          //======================================================

   \                                 In section .rodata, align 4
    110          const unsigned char F8X16[]=
   \                     F8X16:
   \   00000000   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 248, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xF8    
   \              0x00 0x00    
   \   00000016   0x00 0x00          DC8 0, 0, 0, 0, 0, 51, 48, 0, 0, 0, 0, 16, 12, 6, 16, 12, 6, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x33    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x10    
   \              0x0C 0x06    
   \              0x10 0x0C    
   \              0x06 0x00    
   \              0x00 0x00    
   \              0x00         
   \   0000002B   0x00 0x00          DC8 0, 0, 0, 0, 0, 64, 192, 120, 64, 192, 120, 64, 0, 4, 63, 4, 4, 63
   \              0x00 0x00    
   \              0x00 0x40    
   \              0xC0 0x78    
   \              0x40 0xC0    
   \              0x78 0x40    
   \              0x00 0x04    
   \              0x3F 0x04    
   \              0x04 0x3F    
   \   0000003D   0x04 0x04          DC8 4, 4, 0, 0, 112, 136, 252, 8, 48, 0, 0, 0, 24, 32, 255, 33, 30, 0
   \              0x00 0x00    
   \              0x70 0x88    
   \              0xFC 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x18 0x20    
   \              0xFF 0x21    
   \              0x1E 0x00    
   \   0000004F   0x00 0xF0          DC8 0, 240, 8, 240, 0, 224, 24, 0, 0, 0, 33, 28, 3, 30, 33, 30, 0, 0
   \              0x08 0xF0    
   \              0x00 0xE0    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x21 0x1C    
   \              0x03 0x1E    
   \              0x21 0x1E    
   \              0x00 0x00    
   \   00000061   0xF0 0x08          DC8 240, 8, 136, 112, 0, 0, 0, 30, 33, 35, 36, 25, 39, 33, 16, 16, 22
   \              0x88 0x70    
   \              0x00 0x00    
   \              0x00 0x1E    
   \              0x21 0x23    
   \              0x24 0x19    
   \              0x27 0x21    
   \              0x10 0x10    
   \              0x16         
   \   00000072   0x0E 0x00          DC8 14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 224, 24, 4, 2
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE0    
   \              0x18 0x04    
   \              0x02         
   \   00000087   0x00 0x00          DC8 0, 0, 0, 0, 7, 24, 32, 64, 0, 0, 2, 4, 24, 224, 0, 0, 0, 0, 64, 32
   \              0x00 0x00    
   \              0x07 0x18    
   \              0x20 0x40    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x18 0xE0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \   0000009B   0x18 0x07          DC8 24, 7, 0, 0, 0, 64, 64, 128, 240, 128, 64, 64, 0, 2, 2, 1, 15, 1, 2
   \              0x00 0x00    
   \              0x00 0x40    
   \              0x40 0x80    
   \              0xF0 0x80    
   \              0x40 0x40    
   \              0x00 0x02    
   \              0x02 0x01    
   \              0x0F 0x01    
   \              0x02         
   \   000000AE   0x02 0x00          DC8 2, 0, 0, 0, 0, 240, 0, 0, 0, 0, 1, 1, 1, 31, 1, 1, 1, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0xF0    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x01    
   \              0x01 0x1F    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000C4   0x00 0x00          DC8 0, 0, 0, 0, 128, 176, 112, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x80 0xB0    
   \              0x70 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000000D9   0x01 0x01          DC8 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 48, 48, 0, 0, 0, 0
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000000EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 96, 24, 4, 0, 96, 24, 6, 1, 0, 0, 0, 0, 224, 16
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x18    
   \              0x04 0x00    
   \              0x60 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE0 0x10    
   \   00000103   0x08 0x08          DC8 8, 8, 16, 224, 0, 0, 15, 16, 32, 32, 16, 15, 0, 0, 16, 16, 248, 0
   \              0x10 0xE0    
   \              0x00 0x00    
   \              0x0F 0x10    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x00    
   \              0x10 0x10    
   \              0xF8 0x00    
   \   00000115   0x00 0x00          DC8 0, 0, 0, 0, 32, 32, 63, 32, 32, 0, 0, 0, 112, 8, 8, 8, 136, 112, 0
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x70 0x08    
   \              0x08 0x08    
   \              0x88 0x70    
   \              0x00         
   \   00000128   0x00 0x30          DC8 0, 48, 40, 36, 34, 33, 48, 0, 0, 48, 8, 136, 136, 72, 48, 0, 0, 24
   \              0x28 0x24    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x30    
   \              0x08 0x88    
   \              0x88 0x48    
   \              0x30 0x00    
   \              0x00 0x18    
   \   0000013A   0x20 0x20          DC8 32, 32, 32, 17, 14, 0, 0, 0, 192, 32, 16, 248, 0, 0, 0, 7, 4, 36
   \              0x20 0x11    
   \              0x0E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x10 0xF8    
   \              0x00 0x00    
   \              0x00 0x07    
   \              0x04 0x24    
   \   0000014C   0x24 0x3F          DC8 36, 63, 36, 0, 0, 248, 8, 136, 136, 8, 8, 0, 0, 25, 33, 32, 32, 17
   \              0x24 0x00    
   \              0x00 0xF8    
   \              0x08 0x88    
   \              0x88 0x08    
   \              0x08 0x00    
   \              0x00 0x19    
   \              0x21 0x20    
   \              0x20 0x11    
   \   0000015E   0x0E 0x00          DC8 14, 0, 0, 224, 16, 136, 136, 24, 0, 0, 0, 15, 17, 32, 32, 17, 14, 0
   \              0x00 0xE0    
   \              0x10 0x88    
   \              0x88 0x18    
   \              0x00 0x00    
   \              0x00 0x0F    
   \              0x11 0x20    
   \              0x20 0x11    
   \              0x0E 0x00    
   \   00000170   0x00 0x38          DC8 0, 56, 8, 8, 200, 56, 8, 0, 0, 0, 0, 63, 0, 0, 0, 0, 0, 112, 136, 8
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x70    
   \              0x88 0x08    
   \   00000184   0x08 0x88          DC8 8, 136, 112, 0, 0, 28, 34, 33, 33, 34, 28, 0, 0, 224, 16, 8, 8, 16
   \              0x70 0x00    
   \              0x00 0x1C    
   \              0x22 0x21    
   \              0x21 0x22    
   \              0x1C 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x10    
   \   00000196   0xE0 0x00          DC8 224, 0, 0, 0, 49, 34, 34, 17, 15, 0, 0, 0, 0, 192, 192, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x31 0x22    
   \              0x22 0x11    
   \              0x0F 0x00    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00         
   \   000001A9   0x00 0x00          DC8 0, 0, 48, 48, 0, 0, 0, 0, 0, 0, 128, 0, 0, 0, 0, 0, 0, 128, 96, 0
   \              0x30 0x30    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x60 0x00    
   \   000001BD   0x00 0x00          DC8 0, 0, 0, 0, 0, 128, 64, 32, 16, 8, 0, 0, 1, 2, 4, 8, 16, 32, 0, 64
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x00 0x00    
   \              0x01 0x02    
   \              0x04 0x08    
   \              0x10 0x20    
   \              0x00 0x40    
   \   000001D1   0x40 0x40          DC8 64, 64, 64, 64, 64, 64, 0, 4, 4, 4, 4, 4, 4, 4, 0, 0, 8, 16, 32, 64
   \              0x40 0x40    
   \              0x40 0x40    
   \              0x00 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x04 0x04    
   \              0x00 0x00    
   \              0x08 0x10    
   \              0x20 0x40    
   \   000001E5   0x80 0x00          DC8 128, 0, 0, 0, 32, 16, 8, 4, 2, 1, 0, 0, 112, 72, 8, 8, 8, 240, 0, 0
   \              0x00 0x00    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x01    
   \              0x00 0x00    
   \              0x70 0x48    
   \              0x08 0x08    
   \              0x08 0xF0    
   \              0x00 0x00    
   \   000001F9   0x00 0x00          DC8 0, 0, 48, 54, 1, 0, 0, 192, 48, 200, 40, 232, 16, 224, 0, 7, 24, 39
   \              0x30 0x36    
   \              0x01 0x00    
   \              0x00 0xC0    
   \              0x30 0xC8    
   \              0x28 0xE8    
   \              0x10 0xE0    
   \              0x00 0x07    
   \              0x18 0x27    
   \   0000020B   0x24 0x23          DC8 36, 35, 20, 11, 0, 0, 0, 192, 56, 224, 0, 0, 0, 32, 60, 35, 2, 2
   \              0x14 0x0B    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x38 0xE0    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x3C 0x23    
   \              0x02 0x02    
   \   0000021D   0x27 0x38          DC8 39, 56, 32, 8, 248, 136, 136, 136, 112, 0, 0, 32, 63, 32, 32, 32
   \              0x20 0x08    
   \              0xF8 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x20 0x20    
   \   0000022D   0x11 0x0E          DC8 17, 14, 0, 192, 48, 8, 8, 8, 8, 56, 0, 7, 24, 32, 32, 32, 16, 8, 0
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x08 0x38    
   \              0x00 0x07    
   \              0x18 0x20    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x00         
   \   00000240   0x08 0xF8          DC8 8, 248, 8, 8, 8, 16, 224, 0, 32, 63, 32, 32, 32, 16, 15, 0, 8, 248
   \              0x08 0x08    
   \              0x08 0x10    
   \              0xE0 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x0F 0x00    
   \              0x08 0xF8    
   \   00000252   0x88 0x88          DC8 136, 136, 232, 8, 16, 0, 32, 63, 32, 32, 35, 32, 24, 0, 8, 248, 136
   \              0xE8 0x08    
   \              0x10 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x23 0x20    
   \              0x18 0x00    
   \              0x08 0xF8    
   \              0x88         
   \   00000263   0x88 0xE8          DC8 136, 232, 8, 16, 0, 32, 63, 32, 0, 3, 0, 0, 0, 192, 48, 8, 8, 8, 56
   \              0x08 0x10    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x03    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x30 0x08    
   \              0x08 0x08    
   \              0x38         
   \   00000276   0x00 0x00          DC8 0, 0, 7, 24, 32, 32, 34, 30, 2, 0, 8, 248, 8, 0, 0, 8, 248, 8, 32
   \              0x07 0x18    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x02 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x20         
   \   00000289   0x3F 0x21          DC8 63, 33, 1, 1, 33, 63, 32, 0, 8, 8, 248, 8, 8, 0, 0, 0, 32, 32, 63
   \              0x01 0x01    
   \              0x21 0x3F    
   \              0x20 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x20 0x20    
   \              0x3F         
   \   0000029C   0x20 0x20          DC8 32, 32, 0, 0, 0, 0, 8, 8, 248, 8, 8, 0, 192, 128, 128, 128, 127, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0xF8 0x08    
   \              0x08 0x00    
   \              0xC0 0x80    
   \              0x80 0x80    
   \              0x7F 0x00    
   \   000002AE   0x00 0x00          DC8 0, 0, 8, 248, 136, 192, 40, 24, 8, 0, 32, 63, 32, 1, 38, 56, 32, 0
   \              0x08 0xF8    
   \              0x88 0xC0    
   \              0x28 0x18    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x20 0x01    
   \              0x26 0x38    
   \              0x20 0x00    
   \   000002C0   0x08 0xF8          DC8 8, 248, 8, 0, 0, 0, 0, 0, 32, 63, 32, 32, 32, 32, 48, 0, 8, 248
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x30 0x00    
   \              0x08 0xF8    
   \   000002D2   0xF8 0x00          DC8 248, 0, 248, 248, 8, 0, 32, 63, 0, 63, 0, 63, 32, 0, 8, 248, 48
   \              0xF8 0xF8    
   \              0x08 0x00    
   \              0x20 0x3F    
   \              0x00 0x3F    
   \              0x00 0x3F    
   \              0x20 0x00    
   \              0x08 0xF8    
   \              0x30         
   \   000002E3   0xC0 0x00          DC8 192, 0, 8, 248, 8, 32, 63, 32, 0, 7, 24, 63, 0, 224, 16, 8, 8, 8
   \              0x08 0xF8    
   \              0x08 0x20    
   \              0x3F 0x20    
   \              0x00 0x07    
   \              0x18 0x3F    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \   000002F5   0x10 0xE0          DC8 16, 224, 0, 15, 16, 32, 32, 32, 16, 15, 0, 8, 248, 8, 8, 8, 8, 240
   \              0x00 0x0F    
   \              0x10 0x20    
   \              0x20 0x20    
   \              0x10 0x0F    
   \              0x00 0x08    
   \              0xF8 0x08    
   \              0x08 0x08    
   \              0x08 0xF0    
   \   00000307   0x00 0x20          DC8 0, 32, 63, 33, 1, 1, 1, 0, 0, 224, 16, 8, 8, 8, 16, 224, 0, 15, 24
   \              0x3F 0x21    
   \              0x01 0x01    
   \              0x01 0x00    
   \              0x00 0xE0    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0x10 0xE0    
   \              0x00 0x0F    
   \              0x18         
   \   0000031A   0x24 0x24          DC8 36, 36, 56, 80, 79, 0, 8, 248, 136, 136, 136, 136, 112, 0, 32, 63
   \              0x38 0x50    
   \              0x4F 0x00    
   \              0x08 0xF8    
   \              0x88 0x88    
   \              0x88 0x88    
   \              0x70 0x00    
   \              0x20 0x3F    
   \   0000032A   0x20 0x00          DC8 32, 0, 3, 12, 48, 32, 0, 112, 136, 8, 8, 8, 56, 0, 0, 56, 32, 33
   \              0x03 0x0C    
   \              0x30 0x20    
   \              0x00 0x70    
   \              0x88 0x08    
   \              0x08 0x08    
   \              0x38 0x00    
   \              0x00 0x38    
   \              0x20 0x21    
   \   0000033C   0x21 0x22          DC8 33, 34, 28, 0, 24, 8, 8, 248, 8, 8, 24, 0, 0, 0, 32, 63, 32, 0, 0
   \              0x1C 0x00    
   \              0x18 0x08    
   \              0x08 0xF8    
   \              0x08 0x08    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20 0x00    
   \              0x00         
   \   0000034F   0x00 0x08          DC8 0, 8, 248, 8, 0, 0, 8, 248, 8, 0, 31, 32, 32, 32, 32, 31, 0, 8, 120
   \              0xF8 0x08    
   \              0x00 0x00    
   \              0x08 0xF8    
   \              0x08 0x00    
   \              0x1F 0x20    
   \              0x20 0x20    
   \              0x20 0x1F    
   \              0x00 0x08    
   \              0x78         
   \   00000362   0x88 0x00          DC8 136, 0, 0, 200, 56, 8, 0, 0, 7, 56, 14, 1, 0, 0, 248, 8, 0, 248, 0
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x07 0x38    
   \              0x0E 0x01    
   \              0x00 0x00    
   \              0xF8 0x08    
   \              0x00 0xF8    
   \              0x00         
   \   00000375   0x08 0xF8          DC8 8, 248, 0, 3, 60, 7, 0, 7, 60, 3, 0, 8, 24, 104, 128, 128, 104, 24
   \              0x00 0x03    
   \              0x3C 0x07    
   \              0x00 0x07    
   \              0x3C 0x03    
   \              0x00 0x08    
   \              0x18 0x68    
   \              0x80 0x80    
   \              0x68 0x18    
   \   00000387   0x08 0x20          DC8 8, 32, 48, 44, 3, 3, 44, 48, 32, 8, 56, 200, 0, 200, 56, 8, 0, 0, 0
   \              0x30 0x2C    
   \              0x03 0x03    
   \              0x2C 0x30    
   \              0x20 0x08    
   \              0x38 0xC8    
   \              0x00 0xC8    
   \              0x38 0x08    
   \              0x00 0x00    
   \              0x00         
   \   0000039A   0x20 0x3F          DC8 32, 63, 32, 0, 0, 0, 16, 8, 8, 8, 200, 56, 8, 0, 32, 56, 38, 33, 32
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x10 0x08    
   \              0x08 0x08    
   \              0xC8 0x38    
   \              0x08 0x00    
   \              0x20 0x38    
   \              0x26 0x21    
   \              0x20         
   \   000003AD   0x20 0x18          DC8 32, 24, 0, 0, 0, 0, 254, 2, 2, 2, 0, 0, 0, 0, 127, 64, 64, 64, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x02    
   \              0x02 0x02    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7F 0x40    
   \              0x40 0x40    
   \              0x00 0x00    
   \   000003C1   0x0C 0x30          DC8 12, 48, 192, 0, 0, 0, 0, 0, 0, 0, 1, 6, 56, 192, 0, 0, 2, 2, 2, 254
   \              0xC0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x01 0x06    
   \              0x38 0xC0    
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x02 0xFE    
   \   000003D5   0x00 0x00          DC8 0, 0, 0, 0, 64, 64, 64, 127, 0, 0, 0, 0, 0, 4, 2, 2, 2, 4, 0, 0, 0
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x40 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x04    
   \              0x02 0x02    
   \              0x02 0x04    
   \              0x00 0x00    
   \              0x00         
   \   000003EA   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 128, 128, 128, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000003FD   0x80 0x80          DC8 128, 128, 128, 0, 2, 2, 4, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x80 0x00    
   \              0x02 0x02    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \   00000412   0x80 0x80          DC8 128, 128, 128, 128, 0, 0, 0, 25, 36, 34, 34, 34, 63, 32, 8, 248, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x19    
   \              0x24 0x22    
   \              0x22 0x22    
   \              0x3F 0x20    
   \              0x08 0xF8    
   \              0x00         
   \   00000423   0x80 0x80          DC8 128, 128, 0, 0, 0, 0, 63, 17, 32, 32, 17, 14, 0, 0, 0, 0, 128, 128
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x11    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \   00000435   0x80 0x00          DC8 128, 0, 0, 0, 14, 17, 32, 32, 32, 17, 0, 0, 0, 0, 128, 128, 136
   \              0x00 0x00    
   \              0x0E 0x11    
   \              0x20 0x20    
   \              0x20 0x11    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x88         
   \   00000446   0xF8 0x00          DC8 248, 0, 0, 14, 17, 32, 32, 16, 63, 32, 0, 0, 128, 128, 128, 128, 0
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000457   0x00 0x00          DC8 0, 0, 31, 34, 34, 34, 34, 19, 0, 0, 128, 128, 240, 136, 136, 136
   \              0x1F 0x22    
   \              0x22 0x22    
   \              0x22 0x13    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0xF0 0x88    
   \              0x88 0x88    
   \   00000467   0x18 0x00          DC8 24, 0, 32, 32, 63, 32, 32, 0, 0, 0, 0, 128, 128, 128, 128, 128, 0
   \              0x20 0x20    
   \              0x3F 0x20    
   \              0x20 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00         
   \   00000478   0x00 0x6B          DC8 0, 107, 148, 148, 148, 147, 96, 0, 8, 248, 0, 128, 128, 128, 0, 0
   \              0x94 0x94    
   \              0x94 0x93    
   \              0x60 0x00    
   \              0x08 0xF8    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000488   0x20 0x3F          DC8 32, 63, 33, 0, 0, 32, 63, 32, 0, 128, 152, 152, 0, 0, 0, 0, 0, 32
   \              0x21 0x00    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \   0000049A   0x20 0x3F          DC8 32, 63, 32, 32, 0, 0, 0, 0, 0, 128, 152, 152, 0, 0, 0, 192, 128
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0x98 0x98    
   \              0x00 0x00    
   \              0x00 0xC0    
   \              0x80         
   \   000004AB   0x80 0x80          DC8 128, 128, 127, 0, 0, 8, 248, 0, 0, 128, 128, 128, 0, 32, 63, 36, 2
   \              0x7F 0x00    
   \              0x00 0x08    
   \              0xF8 0x00    
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x24    
   \              0x02         
   \   000004BC   0x2D 0x30          DC8 45, 48, 32, 0, 0, 8, 8, 248, 0, 0, 0, 0, 0, 32, 32, 63, 32, 32, 0
   \              0x20 0x00    
   \              0x00 0x08    
   \              0x08 0xF8    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x20 0x20    
   \              0x00         
   \   000004CF   0x00 0x80          DC8 0, 128, 128, 128, 128, 128, 128, 128, 0, 32, 63, 32, 0, 63, 32, 0
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x3F 0x20    
   \              0x00 0x3F    
   \              0x20 0x00    
   \   000004DF   0x3F 0x80          DC8 63, 128, 128, 0, 128, 128, 128, 0, 0, 32, 63, 33, 0, 0, 32, 63, 32
   \              0x80 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x20    
   \              0x3F 0x21    
   \              0x00 0x00    
   \              0x20 0x3F    
   \              0x20         
   \   000004F0   0x00 0x00          DC8 0, 0, 128, 128, 128, 128, 0, 0, 0, 31, 32, 32, 32, 32, 31, 0, 128
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x1F 0x00    
   \              0x80         
   \   00000501   0x80 0x00          DC8 128, 0, 128, 128, 0, 0, 0, 128, 255, 161, 32, 32, 17, 14, 0, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x80    
   \              0xFF 0xA1    
   \              0x20 0x20    
   \              0x11 0x0E    
   \              0x00 0x00    
   \              0x00         
   \   00000512   0x00 0x80          DC8 0, 128, 128, 128, 128, 0, 0, 14, 17, 32, 32, 160, 255, 128, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x0E    
   \              0x11 0x20    
   \              0x20 0xA0    
   \              0xFF 0x80    
   \              0x80         
   \   00000521   0x80 0x80          DC8 128, 128, 0, 128, 128, 128, 0, 32, 32, 63, 33, 32, 0, 1, 0, 0, 0
   \              0x00 0x80    
   \              0x80 0x80    
   \              0x00 0x20    
   \              0x20 0x3F    
   \              0x21 0x20    
   \              0x00 0x01    
   \              0x00 0x00    
   \              0x00         
   \   00000532   0x80 0x80          DC8 128, 128, 128, 128, 128, 0, 0, 51, 36, 36, 36, 36, 25, 0, 0, 128
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x33    
   \              0x24 0x24    
   \              0x24 0x24    
   \              0x19 0x00    
   \              0x00 0x80    
   \   00000542   0x80 0xE0          DC8 128, 224, 128, 128, 0, 0, 0, 0, 0, 31, 32, 32, 0, 0, 128, 128, 0, 0
   \              0x80 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x00 0x00    
   \   00000554   0x00 0x80          DC8 0, 128, 128, 0, 0, 31, 32, 32, 32, 16, 63, 32, 128, 128, 128, 0, 0
   \              0x80 0x00    
   \              0x00 0x1F    
   \              0x20 0x20    
   \              0x20 0x10    
   \              0x3F 0x20    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00         
   \   00000565   0x80 0x80          DC8 128, 128, 128, 0, 1, 14, 48, 8, 6, 1, 0, 128, 128, 0, 128, 0, 128
   \              0x80 0x00    
   \              0x01 0x0E    
   \              0x30 0x08    
   \              0x06 0x01    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x00    
   \              0x80         
   \   00000576   0x80 0x80          DC8 128, 128, 15, 48, 12, 3, 12, 48, 15, 0, 0, 128, 128, 0, 128, 128
   \              0x0F 0x30    
   \              0x0C 0x03    
   \              0x0C 0x30    
   \              0x0F 0x00    
   \              0x00 0x80    
   \              0x80 0x00    
   \              0x80 0x80    
   \   00000586   0x80 0x00          DC8 128, 0, 0, 32, 49, 46, 14, 49, 32, 0, 128, 128, 128, 0, 0, 128, 128
   \              0x00 0x20    
   \              0x31 0x2E    
   \              0x0E 0x31    
   \              0x20 0x00    
   \              0x80 0x80    
   \              0x80 0x00    
   \              0x00 0x80    
   \              0x80         
   \   00000597   0x80 0x80          DC8 128, 128, 129, 142, 112, 24, 6, 1, 0, 0, 128, 128, 128, 128, 128
   \              0x81 0x8E    
   \              0x70 0x18    
   \              0x06 0x01    
   \              0x00 0x00    
   \              0x80 0x80    
   \              0x80 0x80    
   \              0x80         
   \   000005A6   0x80 0x00          DC8 128, 0, 0, 33, 48, 44, 34, 33, 48, 0, 0, 0, 0, 0, 128, 124, 2, 2, 0
   \              0x00 0x21    
   \              0x30 0x2C    
   \              0x22 0x21    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x7C    
   \              0x02 0x02    
   \              0x00         
   \   000005B9   0x00 0x00          DC8 0, 0, 0, 0, 63, 64, 64, 0, 0, 0, 0, 255, 0, 0, 0, 0, 0, 0, 0, 255
   \              0x00 0x00    
   \              0x3F 0x40    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \   000005CD   0x00 0x00          DC8 0, 0, 0, 0, 2, 2, 124, 128, 0, 0, 0, 0, 64, 64, 63, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x02 0x02    
   \              0x7C 0x80    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x40    
   \              0x3F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \   000005E1   0x06 0x01          DC8 6, 1, 1, 2, 2, 4, 4, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x01 0x02    
   \              0x02 0x04    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
    111          {
    112            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,// 0
    113            0x00,0x00,0x00,0xF8,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x33,0x30,0x00,0x00,0x00,//!1
    114            0x00,0x10,0x0C,0x06,0x10,0x0C,0x06,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//"2
    115            0x40,0xC0,0x78,0x40,0xC0,0x78,0x40,0x00,0x04,0x3F,0x04,0x04,0x3F,0x04,0x04,0x00,//#3
    116            0x00,0x70,0x88,0xFC,0x08,0x30,0x00,0x00,0x00,0x18,0x20,0xFF,0x21,0x1E,0x00,0x00,//$4
    117            0xF0,0x08,0xF0,0x00,0xE0,0x18,0x00,0x00,0x00,0x21,0x1C,0x03,0x1E,0x21,0x1E,0x00,//%5
    118            0x00,0xF0,0x08,0x88,0x70,0x00,0x00,0x00,0x1E,0x21,0x23,0x24,0x19,0x27,0x21,0x10,//&6
    119            0x10,0x16,0x0E,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//'7
    120            0x00,0x00,0x00,0xE0,0x18,0x04,0x02,0x00,0x00,0x00,0x00,0x07,0x18,0x20,0x40,0x00,//(8
    121            0x00,0x02,0x04,0x18,0xE0,0x00,0x00,0x00,0x00,0x40,0x20,0x18,0x07,0x00,0x00,0x00,//)9
    122            0x40,0x40,0x80,0xF0,0x80,0x40,0x40,0x00,0x02,0x02,0x01,0x0F,0x01,0x02,0x02,0x00,//*10
    123            0x00,0x00,0x00,0xF0,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x1F,0x01,0x01,0x01,0x00,//+11
    124            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0xB0,0x70,0x00,0x00,0x00,0x00,0x00,//,12
    125            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x01,0x01,0x01,0x01,0x01,0x01,//-13
    126            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,0x00,0x00,//.14
    127            0x00,0x00,0x00,0x00,0x80,0x60,0x18,0x04,0x00,0x60,0x18,0x06,0x01,0x00,0x00,0x00,///15
    128            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x0F,0x10,0x20,0x20,0x10,0x0F,0x00,//016
    129            0x00,0x10,0x10,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//117
    130            0x00,0x70,0x08,0x08,0x08,0x88,0x70,0x00,0x00,0x30,0x28,0x24,0x22,0x21,0x30,0x00,//218
    131            0x00,0x30,0x08,0x88,0x88,0x48,0x30,0x00,0x00,0x18,0x20,0x20,0x20,0x11,0x0E,0x00,//319
    132            0x00,0x00,0xC0,0x20,0x10,0xF8,0x00,0x00,0x00,0x07,0x04,0x24,0x24,0x3F,0x24,0x00,//420
    133            0x00,0xF8,0x08,0x88,0x88,0x08,0x08,0x00,0x00,0x19,0x21,0x20,0x20,0x11,0x0E,0x00,//521
    134            0x00,0xE0,0x10,0x88,0x88,0x18,0x00,0x00,0x00,0x0F,0x11,0x20,0x20,0x11,0x0E,0x00,//622
    135            0x00,0x38,0x08,0x08,0xC8,0x38,0x08,0x00,0x00,0x00,0x00,0x3F,0x00,0x00,0x00,0x00,//723
    136            0x00,0x70,0x88,0x08,0x08,0x88,0x70,0x00,0x00,0x1C,0x22,0x21,0x21,0x22,0x1C,0x00,//824
    137            0x00,0xE0,0x10,0x08,0x08,0x10,0xE0,0x00,0x00,0x00,0x31,0x22,0x22,0x11,0x0F,0x00,//925
    138            0x00,0x00,0x00,0xC0,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x30,0x30,0x00,0x00,0x00,//:26
    139            0x00,0x00,0x00,0x80,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x60,0x00,0x00,0x00,0x00,//;27
    140            0x00,0x00,0x80,0x40,0x20,0x10,0x08,0x00,0x00,0x01,0x02,0x04,0x08,0x10,0x20,0x00,//<28
    141            0x40,0x40,0x40,0x40,0x40,0x40,0x40,0x00,0x04,0x04,0x04,0x04,0x04,0x04,0x04,0x00,//=29
    142            0x00,0x08,0x10,0x20,0x40,0x80,0x00,0x00,0x00,0x20,0x10,0x08,0x04,0x02,0x01,0x00,//>30
    143            0x00,0x70,0x48,0x08,0x08,0x08,0xF0,0x00,0x00,0x00,0x00,0x30,0x36,0x01,0x00,0x00,//?31
    144            0xC0,0x30,0xC8,0x28,0xE8,0x10,0xE0,0x00,0x07,0x18,0x27,0x24,0x23,0x14,0x0B,0x00,//@32
    145            0x00,0x00,0xC0,0x38,0xE0,0x00,0x00,0x00,0x20,0x3C,0x23,0x02,0x02,0x27,0x38,0x20,//A33
    146            0x08,0xF8,0x88,0x88,0x88,0x70,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x11,0x0E,0x00,//B34
    147            0xC0,0x30,0x08,0x08,0x08,0x08,0x38,0x00,0x07,0x18,0x20,0x20,0x20,0x10,0x08,0x00,//C35
    148            0x08,0xF8,0x08,0x08,0x08,0x10,0xE0,0x00,0x20,0x3F,0x20,0x20,0x20,0x10,0x0F,0x00,//D36
    149            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x20,0x23,0x20,0x18,0x00,//E37
    150            0x08,0xF8,0x88,0x88,0xE8,0x08,0x10,0x00,0x20,0x3F,0x20,0x00,0x03,0x00,0x00,0x00,//F38
    151            0xC0,0x30,0x08,0x08,0x08,0x38,0x00,0x00,0x07,0x18,0x20,0x20,0x22,0x1E,0x02,0x00,//G39
    152            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x20,0x3F,0x21,0x01,0x01,0x21,0x3F,0x20,//H40
    153            0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//I41
    154            0x00,0x00,0x08,0x08,0xF8,0x08,0x08,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,0x00,//J42
    155            0x08,0xF8,0x88,0xC0,0x28,0x18,0x08,0x00,0x20,0x3F,0x20,0x01,0x26,0x38,0x20,0x00,//K43
    156            0x08,0xF8,0x08,0x00,0x00,0x00,0x00,0x00,0x20,0x3F,0x20,0x20,0x20,0x20,0x30,0x00,//L44
    157            0x08,0xF8,0xF8,0x00,0xF8,0xF8,0x08,0x00,0x20,0x3F,0x00,0x3F,0x00,0x3F,0x20,0x00,//M45
    158            0x08,0xF8,0x30,0xC0,0x00,0x08,0xF8,0x08,0x20,0x3F,0x20,0x00,0x07,0x18,0x3F,0x00,//N46
    159            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x10,0x20,0x20,0x20,0x10,0x0F,0x00,//O47
    160            0x08,0xF8,0x08,0x08,0x08,0x08,0xF0,0x00,0x20,0x3F,0x21,0x01,0x01,0x01,0x00,0x00,//P48
    161            0xE0,0x10,0x08,0x08,0x08,0x10,0xE0,0x00,0x0F,0x18,0x24,0x24,0x38,0x50,0x4F,0x00,//Q49
    162            0x08,0xF8,0x88,0x88,0x88,0x88,0x70,0x00,0x20,0x3F,0x20,0x00,0x03,0x0C,0x30,0x20,//R50
    163            0x00,0x70,0x88,0x08,0x08,0x08,0x38,0x00,0x00,0x38,0x20,0x21,0x21,0x22,0x1C,0x00,//S51
    164            0x18,0x08,0x08,0xF8,0x08,0x08,0x18,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//T52
    165            0x08,0xF8,0x08,0x00,0x00,0x08,0xF8,0x08,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//U53
    166            0x08,0x78,0x88,0x00,0x00,0xC8,0x38,0x08,0x00,0x00,0x07,0x38,0x0E,0x01,0x00,0x00,//V54
    167            0xF8,0x08,0x00,0xF8,0x00,0x08,0xF8,0x00,0x03,0x3C,0x07,0x00,0x07,0x3C,0x03,0x00,//W55
    168            0x08,0x18,0x68,0x80,0x80,0x68,0x18,0x08,0x20,0x30,0x2C,0x03,0x03,0x2C,0x30,0x20,//X56
    169            0x08,0x38,0xC8,0x00,0xC8,0x38,0x08,0x00,0x00,0x00,0x20,0x3F,0x20,0x00,0x00,0x00,//Y57
    170            0x10,0x08,0x08,0x08,0xC8,0x38,0x08,0x00,0x20,0x38,0x26,0x21,0x20,0x20,0x18,0x00,//Z58
    171            0x00,0x00,0x00,0xFE,0x02,0x02,0x02,0x00,0x00,0x00,0x00,0x7F,0x40,0x40,0x40,0x00,//[59
    172            0x00,0x0C,0x30,0xC0,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x01,0x06,0x38,0xC0,0x00,//\60
    173            0x00,0x02,0x02,0x02,0xFE,0x00,0x00,0x00,0x00,0x40,0x40,0x40,0x7F,0x00,0x00,0x00,//]61
    174            0x00,0x00,0x04,0x02,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//^62
    175            0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x80,//_63
    176            0x00,0x02,0x02,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//`64
    177            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x19,0x24,0x22,0x22,0x22,0x3F,0x20,//a65
    178            0x08,0xF8,0x00,0x80,0x80,0x00,0x00,0x00,0x00,0x3F,0x11,0x20,0x20,0x11,0x0E,0x00,//b66
    179            0x00,0x00,0x00,0x80,0x80,0x80,0x00,0x00,0x00,0x0E,0x11,0x20,0x20,0x20,0x11,0x00,//c67
    180            0x00,0x00,0x00,0x80,0x80,0x88,0xF8,0x00,0x00,0x0E,0x11,0x20,0x20,0x10,0x3F,0x20,//d68
    181            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x22,0x22,0x22,0x22,0x13,0x00,//e69
    182            0x00,0x80,0x80,0xF0,0x88,0x88,0x88,0x18,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//f70
    183            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x6B,0x94,0x94,0x94,0x93,0x60,0x00,//g71
    184            0x08,0xF8,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//h72
    185            0x00,0x80,0x98,0x98,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//i73
    186            0x00,0x00,0x00,0x80,0x98,0x98,0x00,0x00,0x00,0xC0,0x80,0x80,0x80,0x7F,0x00,0x00,//j74
    187            0x08,0xF8,0x00,0x00,0x80,0x80,0x80,0x00,0x20,0x3F,0x24,0x02,0x2D,0x30,0x20,0x00,//k75
    188            0x00,0x08,0x08,0xF8,0x00,0x00,0x00,0x00,0x00,0x20,0x20,0x3F,0x20,0x20,0x00,0x00,//l76
    189            0x80,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x20,0x3F,0x20,0x00,0x3F,0x20,0x00,0x3F,//m77
    190            0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x3F,0x21,0x00,0x00,0x20,0x3F,0x20,//n78
    191            0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x00,0x1F,0x20,0x20,0x20,0x20,0x1F,0x00,//o79
    192            0x80,0x80,0x00,0x80,0x80,0x00,0x00,0x00,0x80,0xFF,0xA1,0x20,0x20,0x11,0x0E,0x00,//p80
    193            0x00,0x00,0x00,0x80,0x80,0x80,0x80,0x00,0x00,0x0E,0x11,0x20,0x20,0xA0,0xFF,0x80,//q81
    194            0x80,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x20,0x20,0x3F,0x21,0x20,0x00,0x01,0x00,//r82
    195            0x00,0x00,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x33,0x24,0x24,0x24,0x24,0x19,0x00,//s83
    196            0x00,0x80,0x80,0xE0,0x80,0x80,0x00,0x00,0x00,0x00,0x00,0x1F,0x20,0x20,0x00,0x00,//t84
    197            0x80,0x80,0x00,0x00,0x00,0x80,0x80,0x00,0x00,0x1F,0x20,0x20,0x20,0x10,0x3F,0x20,//u85
    198            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x00,0x01,0x0E,0x30,0x08,0x06,0x01,0x00,//v86
    199            0x80,0x80,0x00,0x80,0x00,0x80,0x80,0x80,0x0F,0x30,0x0C,0x03,0x0C,0x30,0x0F,0x00,//w87
    200            0x00,0x80,0x80,0x00,0x80,0x80,0x80,0x00,0x00,0x20,0x31,0x2E,0x0E,0x31,0x20,0x00,//x88
    201            0x80,0x80,0x80,0x00,0x00,0x80,0x80,0x80,0x80,0x81,0x8E,0x70,0x18,0x06,0x01,0x00,//y89
    202            0x00,0x80,0x80,0x80,0x80,0x80,0x80,0x00,0x00,0x21,0x30,0x2C,0x22,0x21,0x30,0x00,//z90
    203            0x00,0x00,0x00,0x00,0x80,0x7C,0x02,0x02,0x00,0x00,0x00,0x00,0x00,0x3F,0x40,0x40,//{91
    204            0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0xFF,0x00,0x00,0x00,//|92
    205            0x00,0x02,0x02,0x7C,0x80,0x00,0x00,0x00,0x00,0x40,0x40,0x3F,0x00,0x00,0x00,0x00,//}93
    206            0x00,0x06,0x01,0x01,0x02,0x02,0x04,0x04,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,//~94
    207          
    208          };
    209          
    210          
    211          
    212          
    213          //------------------------------LCD¶Ë¿Ú³õÊ¼»¯-------------------------------//

   \                                 In section .text, align 2, keep-with-next
    214          void LCD_IO_Init()
    215          {
   \                     LCD_IO_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    216             //¼üÅÌ½Ó¿ÚGPIO£¬¶ÀÁ¢¼üÅÌÖ»ÓÃµ½ÁËc8µ½c13
    217              PORTC_PCR8 |= PORT_PCR_MUX(1)| PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC8ÉÏÀ­
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x4004b020
   \   00000006   0x6800             LDR      R0,[R0, #+0]
   \   00000008   0xF240 0x1103      MOVW     R1,#+259
   \   0000000C   0x4308             ORRS     R0,R1,R0
   \   0000000E   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x4004b020
   \   00000012   0x6008             STR      R0,[R1, #+0]
    218              PORTC_PCR9 |= PORT_PCR_MUX(1)| PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC9ÉÏÀ­
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x4004b024
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0xF240 0x1103      MOVW     R1,#+259
   \   0000001E   0x4308             ORRS     R0,R1,R0
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable8_1  ;; 0x4004b024
   \   00000024   0x6008             STR      R0,[R1, #+0]
    219              PORTC_PCR10 |= PORT_PCR_MUX(1)| PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC10ÉÏÀ­
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x4004b028
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF240 0x1103      MOVW     R1,#+259
   \   00000030   0x4308             ORRS     R0,R1,R0
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x4004b028
   \   00000036   0x6008             STR      R0,[R1, #+0]
    220              PORTC_PCR11 |= PORT_PCR_MUX(1)| PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC11ÉÏÀ­
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x4004b02c
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF240 0x1103      MOVW     R1,#+259
   \   00000042   0x4308             ORRS     R0,R1,R0
   \   00000044   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x4004b02c
   \   00000048   0x6008             STR      R0,[R1, #+0]
    221              PORTC_PCR12 |= PORT_PCR_MUX(1)| PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC12ÉÏÀ­
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x4004b030
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0xF240 0x1103      MOVW     R1,#+259
   \   00000054   0x4308             ORRS     R0,R1,R0
   \   00000056   0x.... 0x....      LDR.W    R1,??DataTable8_4  ;; 0x4004b030
   \   0000005A   0x6008             STR      R0,[R1, #+0]
    222              PORTC_PCR13 |= PORT_PCR_MUX(1)|PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC13ÉÏÀ­
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x4004b034
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0xF240 0x1103      MOVW     R1,#+259
   \   00000066   0x4308             ORRS     R0,R1,R0
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable8_5  ;; 0x4004b034
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    223              PORTC_PCR14 |= PORT_PCR_MUX(1)|PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC14ÉÏÀ­
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x4004b038
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0xF240 0x1103      MOVW     R1,#+259
   \   00000078   0x4308             ORRS     R0,R1,R0
   \   0000007A   0x.... 0x....      LDR.W    R1,??DataTable8_6  ;; 0x4004b038
   \   0000007E   0x6008             STR      R0,[R1, #+0]
    224              PORTC_PCR15 |= PORT_PCR_MUX(1)| PORT_PCR_PE_MASK | PORT_PCR_PS_MASK;  //PTC15ÉÏÀ­
   \   00000080   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x4004b03c
   \   00000084   0x6800             LDR      R0,[R0, #+0]
   \   00000086   0xF240 0x1103      MOVW     R1,#+259
   \   0000008A   0x4308             ORRS     R0,R1,R0
   \   0000008C   0x.... 0x....      LDR.W    R1,??DataTable8_7  ;; 0x4004b03c
   \   00000090   0x6008             STR      R0,[R1, #+0]
    225            // KEY GPIO ÉÏÀ­ÊäÈë    
    226              GPIOC_PDDR = 0xffff00ff; //PTC8~15ÎªÊäÈë
   \   00000092   0x.... 0x....      LDR.W    R0,??DataTable8_8  ;; 0x400ff094
   \   00000096   0xF47F 0x417F      MVNS     R1,#+65280
   \   0000009A   0x6001             STR      R1,[R0, #+0]
    227              
    228              //LCD GPIO
    229            //  PORTB_PCR0 |= PORT_PCR_MUX(1);//LCD_SCL  
    230           //   PORTB_PCR1 |= PORT_PCR_MUX(1);//LCD_SDA 
    231           //   PORTB_PCR2 |= PORT_PCR_MUX(1);//LCD_RST
    232           //   PORTB_PCR3 |= PORT_PCR_MUX(1);//LCD_DC 
    233          //¸ü¸ÄÎªA¶Ë¿Úºó£¬»¹ÊÇ´ÓÐ¡Ïò´óµÄË³Ðò
    234              PORTA_PCR14 |= PORT_PCR_MUX(1);//LCD_SCL  
   \   0000009C   0x.... 0x....      LDR.W    R0,??DataTable8_9  ;; 0x40049038
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF44F 0x7180      MOV      R1,#+256
   \   000000A6   0x4308             ORRS     R0,R1,R0
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable8_9  ;; 0x40049038
   \   000000AC   0x6008             STR      R0,[R1, #+0]
    235              PORTA_PCR15 |= PORT_PCR_MUX(1);//LCD_SDA 
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable8_10  ;; 0x4004903c
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF44F 0x7180      MOV      R1,#+256
   \   000000B8   0x4308             ORRS     R0,R1,R0
   \   000000BA   0x.... 0x....      LDR.W    R1,??DataTable8_10  ;; 0x4004903c
   \   000000BE   0x6008             STR      R0,[R1, #+0]
    236              PORTA_PCR16 |= PORT_PCR_MUX(1);//LCD_RST
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable8_11  ;; 0x40049040
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0xF44F 0x7180      MOV      R1,#+256
   \   000000CA   0x4308             ORRS     R0,R1,R0
   \   000000CC   0x.... 0x....      LDR.W    R1,??DataTable8_11  ;; 0x40049040
   \   000000D0   0x6008             STR      R0,[R1, #+0]
    237              PORTA_PCR17 |= PORT_PCR_MUX(1);//LCD_DC 
   \   000000D2   0x.... 0x....      LDR.W    R0,??DataTable8_12  ;; 0x40049044
   \   000000D6   0x6800             LDR      R0,[R0, #+0]
   \   000000D8   0xF44F 0x7180      MOV      R1,#+256
   \   000000DC   0x4308             ORRS     R0,R1,R0
   \   000000DE   0x.... 0x....      LDR.W    R1,??DataTable8_12  ;; 0x40049044
   \   000000E2   0x6008             STR      R0,[R1, #+0]
    238              
    239             // GPIOB_PDDR =GPIO_PDDR_PDD(GPIO_PIN(0) | GPIO_PIN(1) | GPIO_PIN(2) | GPIO_PIN(3)); //
    240              	//Êä³öÎª¸ßµãÆ½    
    241              GPIOA_PDDR =GPIO_PDDR_PDD(GPIO_PIN(14) | GPIO_PIN(15) | GPIO_PIN(16) | GPIO_PIN(17));
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable8_13  ;; 0x400ff014
   \   000000E8   0xF45F 0x3170      MOVS     R1,#+245760
   \   000000EC   0x6001             STR      R1,[R0, #+0]
    242              
    243            //  GPIOB_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(0));  //LCD_SCL   d0   10
    244              GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));  //LCD_SCL   d0   10
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable8_14  ;; 0x400ff000
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0xF450 0x4080      ORRS     R0,R0,#0x4000
   \   000000F8   0x.... 0x....      LDR.W    R1,??DataTable8_14  ;; 0x400ff000
   \   000000FC   0x6008             STR      R0,[R1, #+0]
    245              
    246             // GPIOB_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(2));  //LCD_RST
    247              GPIOA_PDOR &= ~GPIO_PDOR_PDO(GPIO_PIN(16));  //LCD_RST
   \   000000FE   0x.... 0x....      LDR.W    R0,??DataTable8_14  ;; 0x400ff000
   \   00000102   0x6800             LDR      R0,[R0, #+0]
   \   00000104   0xF430 0x3080      BICS     R0,R0,#0x10000
   \   00000108   0x.... 0x....      LDR.W    R1,??DataTable8_14  ;; 0x400ff000
   \   0000010C   0x6008             STR      R0,[R1, #+0]
    248              LCD_DLY_ms(40);
   \   0000010E   0x2028             MOVS     R0,#+40
   \   00000110   0x.... 0x....      BL       LCD_DLY_ms
    249              GPIOA_PDOR |= GPIO_PDOR_PDO(GPIO_PIN(16));  //LCD_RST
   \   00000114   0x.... 0x....      LDR.W    R0,??DataTable8_14  ;; 0x400ff000
   \   00000118   0x6800             LDR      R0,[R0, #+0]
   \   0000011A   0xF450 0x3080      ORRS     R0,R0,#0x10000
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable8_14  ;; 0x400ff000
   \   00000122   0x6008             STR      R0,[R1, #+0]
    250          }
   \   00000124   0xBD01             POP      {R0,PC}          ;; return
    251          

   \                                 In section .text, align 4, keep-with-next
    252          void LCD_WrDat(byte data)     //Ð´Êý¾Ý
    253          {
    254                byte i=8;
   \                     LCD_WrDat:
   \   00000000   0x2108             MOVS     R1,#+8
    255                GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(17));     //  LCD_DC    c18
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF452 0x3200      ORRS     R2,R2,#0x20000
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000010   0x601A             STR      R2,[R3, #+0]
    256                asm("nop"); 
   \   00000012   0xBF00             nop              
    257                GPIOA_PDOR &=  ~GPIO_PDOR_PDO(GPIO_PIN(14));  //LCD_SCL         d0  
   \   00000014   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   00000018   0x6812             LDR      R2,[R2, #+0]
   \   0000001A   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   0000001E   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000022   0x601A             STR      R2,[R3, #+0]
    258                asm("nop");    
   \   00000024   0xBF00             nop              
   \   00000026   0xE019             B.N      ??LCD_WrDat_0
    259                while(i--)
    260                {
    261                  if(data&0x80)
    262                  {
    263                   GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(15));  //LCD_SDA       d1
    264                  }
    265                  else
    266                  {
    267                   GPIOA_PDOR &=  ~GPIO_PDOR_PDO(GPIO_PIN(15));  //LCD_SDA
   \                     ??LCD_WrDat_1:
   \   00000028   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   0000002C   0x6812             LDR      R2,[R2, #+0]
   \   0000002E   0xF432 0x4200      BICS     R2,R2,#0x8000
   \   00000032   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000036   0x601A             STR      R2,[R3, #+0]
    268                  }
    269                 GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));  //LCD_SCL
   \                     ??LCD_WrDat_2:
   \   00000038   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   0000003C   0x6812             LDR      R2,[R2, #+0]
   \   0000003E   0xF452 0x4280      ORRS     R2,R2,#0x4000
   \   00000042   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000046   0x601A             STR      R2,[R3, #+0]
    270                  asm("nop");
   \   00000048   0xBF00             nop              
    271                   
    272                GPIOA_PDOR &=  ~GPIO_PDOR_PDO(GPIO_PIN(14));  //LCD_SCL
   \   0000004A   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   0000004E   0x6812             LDR      R2,[R2, #+0]
   \   00000050   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000058   0x601A             STR      R2,[R3, #+0]
    273                  data<<=1;    
   \   0000005A   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrDat_0:
   \   0000005C   0x000A             MOVS     R2,R1
   \   0000005E   0x1E51             SUBS     R1,R2,#+1
   \   00000060   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   00000062   0x2A00             CMP      R2,#+0
   \   00000064   0xD00A             BEQ.N    ??LCD_WrDat_3
   \   00000066   0x0602             LSLS     R2,R0,#+24
   \   00000068   0xD5DE             BPL.N    ??LCD_WrDat_1
   \   0000006A   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   0000006E   0x6812             LDR      R2,[R2, #+0]
   \   00000070   0xF452 0x4200      ORRS     R2,R2,#0x8000
   \   00000074   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000078   0x601A             STR      R2,[R3, #+0]
   \   0000007A   0xE7DD             B.N      ??LCD_WrDat_2
    274                }
    275          }
   \                     ??LCD_WrDat_3:
   \   0000007C   0x4770             BX       LR               ;; return
    276          
    277          

   \                                 In section .text, align 4, keep-with-next
    278          void LCD_WrCmd(byte cmd)   //Ð´×ÖÄ¸
    279          {
    280                byte i=8;
   \                     LCD_WrCmd:
   \   00000000   0x2108             MOVS     R1,#+8
    281                GPIOA_PDOR &=  ~GPIO_PDOR_PDO(GPIO_PIN(17));     //  LCD_DC
   \   00000002   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   00000006   0x6812             LDR      R2,[R2, #+0]
   \   00000008   0xF432 0x3200      BICS     R2,R2,#0x20000
   \   0000000C   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000010   0x601A             STR      R2,[R3, #+0]
    282                GPIOA_PDOR &=  ~GPIO_PDOR_PDO(GPIO_PIN(14));  //LCD_SCL
   \   00000012   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   00000016   0x6812             LDR      R2,[R2, #+0]
   \   00000018   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   0000001C   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000020   0x601A             STR      R2,[R3, #+0]
   \   00000022   0xE019             B.N      ??LCD_WrCmd_0
    283            while(i--)
    284            {
    285              if(cmd&0x80)
    286              {
    287                   GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(15));  //LCD_SDA
    288              }
    289              else
    290              {
    291                   GPIOA_PDOR &=  ~GPIO_PDOR_PDO(GPIO_PIN(15));  //LCD_SDA
   \                     ??LCD_WrCmd_1:
   \   00000024   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   00000028   0x6812             LDR      R2,[R2, #+0]
   \   0000002A   0xF432 0x4200      BICS     R2,R2,#0x8000
   \   0000002E   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000032   0x601A             STR      R2,[R3, #+0]
    292              }
    293                 GPIOA_PDOR |=  GPIO_PDOR_PDO(GPIO_PIN(14));  //LCD_SCL
   \                     ??LCD_WrCmd_2:
   \   00000034   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   00000038   0x6812             LDR      R2,[R2, #+0]
   \   0000003A   0xF452 0x4280      ORRS     R2,R2,#0x4000
   \   0000003E   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000042   0x601A             STR      R2,[R3, #+0]
    294              asm("nop");          
   \   00000044   0xBF00             nop              
    295                GPIOA_PDOR &=  ~GPIO_PDOR_PDO(GPIO_PIN(14));  //LCD_SCL
   \   00000046   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   0000004A   0x6812             LDR      R2,[R2, #+0]
   \   0000004C   0xF432 0x4280      BICS     R2,R2,#0x4000
   \   00000050   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000054   0x601A             STR      R2,[R3, #+0]
    296              cmd<<=1;   
   \   00000056   0x0040             LSLS     R0,R0,#+1
   \                     ??LCD_WrCmd_0:
   \   00000058   0x000A             MOVS     R2,R1
   \   0000005A   0x1E51             SUBS     R1,R2,#+1
   \   0000005C   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000005E   0x2A00             CMP      R2,#+0
   \   00000060   0xD00A             BEQ.N    ??LCD_WrCmd_3
   \   00000062   0x0602             LSLS     R2,R0,#+24
   \   00000064   0xD5DE             BPL.N    ??LCD_WrCmd_1
   \   00000066   0x.... 0x....      LDR.W    R2,??DataTable8_14  ;; 0x400ff000
   \   0000006A   0x6812             LDR      R2,[R2, #+0]
   \   0000006C   0xF452 0x4200      ORRS     R2,R2,#0x8000
   \   00000070   0x.... 0x....      LDR.W    R3,??DataTable8_14  ;; 0x400ff000
   \   00000074   0x601A             STR      R2,[R3, #+0]
   \   00000076   0xE7DD             B.N      ??LCD_WrCmd_2
    297            } 	
    298          	//LCD_CS=1;
    299          }
   \                     ??LCD_WrCmd_3:
   \   00000078   0x4770             BX       LR               ;; return
    300          
    301          

   \                                 In section .text, align 2, keep-with-next
    302          void LCD_Set_Pos(byte x, byte y)  //¶¨ÒåµãµÄ×ø±ê
    303          { 
   \                     LCD_Set_Pos:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    304            LCD_WrCmd(0xb0+y);
   \   00000004   0xF1B1 0x0050      SUBS     R0,R1,#+80
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       LCD_WrCmd
    305            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    306            LCD_WrCmd((x&0x0f)|0x01); 
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
    307          } 
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    308          

   \                                 In section .text, align 2, keep-with-next
    309          void LCD_Set_Pos_Pixel(byte x, byte y)  //¶¨ÒåµãµÄ×ø±ê
    310          { 
   \                     LCD_Set_Pos_Pixel:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    311            LCD_WrCmd(y-0x19);
   \   00000004   0xF1B1 0x0019      SUBS     R0,R1,#+25
   \   00000008   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000A   0x.... 0x....      BL       LCD_WrCmd
    312            LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   0000000E   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000010   0x0920             LSRS     R0,R4,#+4
   \   00000012   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000016   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    313            LCD_WrCmd((x&0x0f)|0x01); 
   \   0000001C   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000020   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
    314          } 
   \   0000002A   0xBD10             POP      {R4,PC}          ;; return
    315          
    316          

   \                                 In section .text, align 2, keep-with-next
    317          void LCD_Fill(byte bmp_data)
    318          {
   \                     LCD_Fill:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
    319          	byte y,x;
    320          	
    321          	for(y=0;y<8;y++)
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE008             B.N      ??LCD_Fill_0
    322          	{
    323          		LCD_WrCmd(0xb0+y);
    324          		LCD_WrCmd(0x01);
    325          		LCD_WrCmd(0x10);
    326          		for(x=0;x<X_WIDTH;x++)
    327          			LCD_WrDat(bmp_data);
   \                     ??LCD_Fill_1:
   \   00000008   0x0020             MOVS     R0,R4
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrDat
   \   00000010   0x1C76             ADDS     R6,R6,#+1
   \                     ??LCD_Fill_2:
   \   00000012   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000014   0x2E80             CMP      R6,#+128
   \   00000016   0xD3F7             BCC.N    ??LCD_Fill_1
   \   00000018   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_Fill_0:
   \   0000001A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000001C   0x2D08             CMP      R5,#+8
   \   0000001E   0xD20C             BCS.N    ??LCD_Fill_3
   \   00000020   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   00000024   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000026   0x.... 0x....      BL       LCD_WrCmd
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
   \   00000030   0x2010             MOVS     R0,#+16
   \   00000032   0x.... 0x....      BL       LCD_WrCmd
   \   00000036   0x2600             MOVS     R6,#+0
   \   00000038   0xE7EB             B.N      ??LCD_Fill_2
    328          	}
    329          }
   \                     ??LCD_Fill_3:
   \   0000003A   0xBD70             POP      {R4-R6,PC}       ;; return
    330          
    331          

   \                                 In section .text, align 2, keep-with-next
    332          void LCD_CLS(void)
    333          {
   \                     LCD_CLS:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    334          	byte y,x;	
    335          	for(y=0;y<8;y++)
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE007             B.N      ??LCD_CLS_0
    336          	{
    337          		LCD_WrCmd(0xb0+y);
    338          		LCD_WrCmd(0x01);
    339          		LCD_WrCmd(0x10); 
    340          		for(x=0;x<X_WIDTH;x++)
    341                          {   
    342          			LCD_WrDat(0);
   \                     ??LCD_CLS_1:
   \   00000006   0x2000             MOVS     R0,#+0
   \   00000008   0x.... 0x....      BL       LCD_WrDat
    343          
    344                          }
   \   0000000C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_CLS_2:
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0x2D80             CMP      R5,#+128
   \   00000012   0xD3F8             BCC.N    ??LCD_CLS_1
   \   00000014   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_CLS_0:
   \   00000016   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000018   0x2C08             CMP      R4,#+8
   \   0000001A   0xD20C             BCS.N    ??LCD_CLS_3
   \   0000001C   0xF1B4 0x0050      SUBS     R0,R4,#+80
   \   00000020   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000022   0x.... 0x....      BL       LCD_WrCmd
   \   00000026   0x2001             MOVS     R0,#+1
   \   00000028   0x.... 0x....      BL       LCD_WrCmd
   \   0000002C   0x2010             MOVS     R0,#+16
   \   0000002E   0x.... 0x....      BL       LCD_WrCmd
   \   00000032   0x2500             MOVS     R5,#+0
   \   00000034   0xE7EB             B.N      ??LCD_CLS_2
    345                  }
    346                  /*for(y=0;y<8;y++)
    347          	{
    348          		LCD_WrCmd(y-0x19);
    349          		LCD_WrCmd(0x01);
    350          		LCD_WrCmd(0x10); 
    351          		for(x=0;x<X_WIDTH;x++)
    352                          {   
    353          			LCD_Set_Pos_Pixel(x, y);
    354                                  LCD_WrDat(0);
    355          
    356                          }
    357                  }*/
    358          }
   \                     ??LCD_CLS_3:
   \   00000036   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    359          

   \                                 In section .text, align 2, keep-with-next
    360          void LCD_CLS_ROW(byte x,byte y )  //ÇåÐÐ  //y±íÊ¾ÐÐÊý£¬x±íÊ¾´ÓÕâÒ»ÐÐµÄÄÄÒ»Î»¿ªÊ¼Çå³ý
    361          {
   \                     LCD_CLS_ROW:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    362          	LCD_WrCmd(0xb0+y);
   \   00000006   0xF1B5 0x0050      SUBS     R0,R5,#+80
   \   0000000A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000C   0x.... 0x....      BL       LCD_WrCmd
    363          	LCD_WrCmd(0x01);
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       LCD_WrCmd
    364          	LCD_WrCmd(0x10); 
   \   00000016   0x2010             MOVS     R0,#+16
   \   00000018   0x.... 0x....      BL       LCD_WrCmd
    365                  LCD_Set_Pos(x,y);
   \   0000001C   0x0029             MOVS     R1,R5
   \   0000001E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000020   0x0020             MOVS     R0,R4
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x.... 0x....      BL       LCD_Set_Pos
   \   00000028   0xE003             B.N      ??LCD_CLS_ROW_0
    366          	for(;x<X_WIDTH;x++)
    367                  {
    368          		LCD_WrDat(0);	
   \                     ??LCD_CLS_ROW_1:
   \   0000002A   0x2000             MOVS     R0,#+0
   \   0000002C   0x.... 0x....      BL       LCD_WrDat
    369                  }
   \   00000030   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_CLS_ROW_0:
   \   00000032   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000034   0x2C80             CMP      R4,#+128
   \   00000036   0xD3F8             BCC.N    ??LCD_CLS_ROW_1
    370          }
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    371          
    372          

   \                                 In section .text, align 2, keep-with-next
    373          void LCD_DLY_ms(word ms)
    374          {                         
   \                     LCD_DLY_ms:
   \   00000000   0xE007             B.N      ??LCD_DLY_ms_0
    375            word a;
    376            while(ms)
    377            {
    378              a=20000;
   \                     ??LCD_DLY_ms_1:
   \   00000002   0xF644 0x6120      MOVW     R1,#+20000
    379              while(a--);
   \                     ??LCD_DLY_ms_2:
   \   00000006   0x000A             MOVS     R2,R1
   \   00000008   0x1E51             SUBS     R1,R2,#+1
   \   0000000A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \   0000000C   0x2A00             CMP      R2,#+0
   \   0000000E   0xD1FA             BNE.N    ??LCD_DLY_ms_2
    380              ms--;
   \   00000010   0x1E40             SUBS     R0,R0,#+1
    381            }
   \                     ??LCD_DLY_ms_0:
   \   00000012   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F4             BNE.N    ??LCD_DLY_ms_1
    382            return;
   \   00000018   0x4770             BX       LR               ;; return
    383          }
    384          
    385          
    386          
    387          //------------------------------------LCD³õÊ¼»¯----------------------------------//

   \                                 In section .text, align 2, keep-with-next
    388          void LCD_Init(void)
    389          {
   \                     LCD_Init:
   \   00000000   0xB580             PUSH     {R7,LR}
    390            LCD_WrCmd(0xae);//--turn off oled panel
   \   00000002   0x20AE             MOVS     R0,#+174
   \   00000004   0x.... 0x....      BL       LCD_WrCmd
    391            LCD_WrCmd(0x00);//---set low column address
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       LCD_WrCmd
    392            LCD_WrCmd(0x10);//---set high column address
   \   0000000E   0x2010             MOVS     R0,#+16
   \   00000010   0x.... 0x....      BL       LCD_WrCmd
    393            LCD_WrCmd(0x40);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
   \   00000014   0x2040             MOVS     R0,#+64
   \   00000016   0x.... 0x....      BL       LCD_WrCmd
    394            LCD_WrCmd(0x81);//--set contrast control register
   \   0000001A   0x2081             MOVS     R0,#+129
   \   0000001C   0x.... 0x....      BL       LCD_WrCmd
    395            LCD_WrCmd(0xcf); // Set SEG Output Current Brightness
   \   00000020   0x20CF             MOVS     R0,#+207
   \   00000022   0x.... 0x....      BL       LCD_WrCmd
    396            LCD_WrCmd(0xa1);//--Set SEG/Column Mapping     0xa0×óÓÒ·´ÖÃ 0xa1Õý³£
   \   00000026   0x20A1             MOVS     R0,#+161
   \   00000028   0x.... 0x....      BL       LCD_WrCmd
    397            LCD_WrCmd(0xc8);//Set COM/Row Scan Direction   0xc0ÉÏÏÂ·´ÖÃ 0xc8Õý³£
   \   0000002C   0x20C8             MOVS     R0,#+200
   \   0000002E   0x.... 0x....      BL       LCD_WrCmd
    398            LCD_WrCmd(0xa6);//--set normal display
   \   00000032   0x20A6             MOVS     R0,#+166
   \   00000034   0x.... 0x....      BL       LCD_WrCmd
    399            LCD_WrCmd(0xa8);//--set multiplex ratio(1 to 64)
   \   00000038   0x20A8             MOVS     R0,#+168
   \   0000003A   0x.... 0x....      BL       LCD_WrCmd
    400            LCD_WrCmd(0x3f);//--1/64 duty
   \   0000003E   0x203F             MOVS     R0,#+63
   \   00000040   0x.... 0x....      BL       LCD_WrCmd
    401            LCD_WrCmd(0xd3);//-set display offset	Shift Mapping RAM Counter (0x00~0x3F)
   \   00000044   0x20D3             MOVS     R0,#+211
   \   00000046   0x.... 0x....      BL       LCD_WrCmd
    402            LCD_WrCmd(0x00);//-not offset
   \   0000004A   0x2000             MOVS     R0,#+0
   \   0000004C   0x.... 0x....      BL       LCD_WrCmd
    403            LCD_WrCmd(0xd5);//--set display clock divide ratio/oscillator frequency
   \   00000050   0x20D5             MOVS     R0,#+213
   \   00000052   0x.... 0x....      BL       LCD_WrCmd
    404            LCD_WrCmd(0x80);//--set divide ratio, Set Clock as 100 Frames/Sec
   \   00000056   0x2080             MOVS     R0,#+128
   \   00000058   0x.... 0x....      BL       LCD_WrCmd
    405            LCD_WrCmd(0xd9);//--set pre-charge period
   \   0000005C   0x20D9             MOVS     R0,#+217
   \   0000005E   0x.... 0x....      BL       LCD_WrCmd
    406            LCD_WrCmd(0xf1);//Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
   \   00000062   0x20F1             MOVS     R0,#+241
   \   00000064   0x.... 0x....      BL       LCD_WrCmd
    407            LCD_WrCmd(0xda);//--set com pins hardware configuration
   \   00000068   0x20DA             MOVS     R0,#+218
   \   0000006A   0x.... 0x....      BL       LCD_WrCmd
    408            LCD_WrCmd(0x12);
   \   0000006E   0x2012             MOVS     R0,#+18
   \   00000070   0x.... 0x....      BL       LCD_WrCmd
    409            LCD_WrCmd(0xdb);//--set vcomh
   \   00000074   0x20DB             MOVS     R0,#+219
   \   00000076   0x.... 0x....      BL       LCD_WrCmd
    410            LCD_WrCmd(0x40);//Set VCOM Deselect Level
   \   0000007A   0x2040             MOVS     R0,#+64
   \   0000007C   0x.... 0x....      BL       LCD_WrCmd
    411            LCD_WrCmd(0x20);//-Set Page Addressing Mode (0x00/0x01/0x02)
   \   00000080   0x2020             MOVS     R0,#+32
   \   00000082   0x.... 0x....      BL       LCD_WrCmd
    412            LCD_WrCmd(0x02);//
   \   00000086   0x2002             MOVS     R0,#+2
   \   00000088   0x.... 0x....      BL       LCD_WrCmd
    413            LCD_WrCmd(0x8d);//--set Charge Pump enable/disable
   \   0000008C   0x208D             MOVS     R0,#+141
   \   0000008E   0x.... 0x....      BL       LCD_WrCmd
    414            LCD_WrCmd(0x14);//--set(0x10) disable
   \   00000092   0x2014             MOVS     R0,#+20
   \   00000094   0x.... 0x....      BL       LCD_WrCmd
    415            LCD_WrCmd(0xa4);// Disable Entire Display On (0xa4/0xa5)
   \   00000098   0x20A4             MOVS     R0,#+164
   \   0000009A   0x.... 0x....      BL       LCD_WrCmd
    416            LCD_WrCmd(0xa6);// Disable Inverse Display On (0xa6/a7) 
   \   0000009E   0x20A6             MOVS     R0,#+166
   \   000000A0   0x.... 0x....      BL       LCD_WrCmd
    417            LCD_WrCmd(0xaf);//--turn on oled panel
   \   000000A4   0x20AF             MOVS     R0,#+175
   \   000000A6   0x.... 0x....      BL       LCD_WrCmd
    418            LCD_Fill(0x00);  //³õÊ¼ÇåÆÁ
   \   000000AA   0x2000             MOVS     R0,#+0
   \   000000AC   0x.... 0x....      BL       LCD_Fill
    419            LCD_Set_Pos(0,0);  
   \   000000B0   0x2100             MOVS     R1,#+0
   \   000000B2   0x2000             MOVS     R0,#+0
   \   000000B4   0x.... 0x....      BL       LCD_Set_Pos
    420          }
   \   000000B8   0xBD01             POP      {R0,PC}          ;; return
    421          
    422          //==============================================================
    423          //º¯ÊýÃû£º void LCD_PutPixel(byte x,byte y)
    424          //¹¦ÄÜÃèÊö£º»æÖÆÒ»¸öµã£¨x,y£©
    425          //²ÎÊý£ºÕæÊµ×ø±êÖµ(x,y),xµÄ·¶Î§0¡«127£¬yµÄ·¶Î§0¡«63
    426          //·µ»Ø£ºÎÞ
    427          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    428          void LCD_PutPixel(byte x,byte y)
    429          {
   \                     LCD_PutPixel:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
    430          	byte data1;  //data1µ±Ç°µãµÄÊý¾Ý 
    431          	 
    432                  LCD_Set_Pos_Pixel(x,y); 
   \   00000006   0x0029             MOVS     R1,R5
   \   00000008   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000000E   0x.... 0x....      BL       LCD_Set_Pos_Pixel
    433          	data1 = 0x01<<(y%8); 	
   \   00000012   0x2001             MOVS     R0,#+1
   \   00000014   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000016   0x2108             MOVS     R1,#+8
   \   00000018   0xFB95 0xF2F1      SDIV     R2,R5,R1
   \   0000001C   0xFB02 0x5211      MLS      R2,R2,R1,R5
   \   00000020   0xFA10 0xF602      LSLS     R6,R0,R2
    434          	LCD_WrCmd(0xb0+(y>>3));
   \   00000024   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000026   0x08E8             LSRS     R0,R5,#+3
   \   00000028   0x3850             SUBS     R0,R0,#+80
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_WrCmd
    435          	LCD_WrCmd(((x&0xf0)>>4)|0x10);
   \   00000030   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000032   0x0920             LSRS     R0,R4,#+4
   \   00000034   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000038   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000003A   0x.... 0x....      BL       LCD_WrCmd
    436          	LCD_WrCmd((x&0x0f)|0x00);
   \   0000003E   0xF014 0x000F      ANDS     R0,R4,#0xF
   \   00000042   0x.... 0x....      BL       LCD_WrCmd
    437          	LCD_WrDat(data1);
   \   00000046   0x0030             MOVS     R0,R6
   \   00000048   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000004A   0x.... 0x....      BL       LCD_WrDat
    438                  //LCD_DLY_ms(100);
    439          }
   \   0000004E   0xBD70             POP      {R4-R6,PC}       ;; return
    440          //==============================================================
    441          //º¯ÊýÃû£º void LCD_Rectangle(byte x1,byte y1,
    442          //                   byte x2,byte y2,byte color,byte gif)
    443          //¹¦ÄÜÃèÊö£º»æÖÆÒ»¸öÊµÐÄ¾ØÐÎ
    444          //²ÎÊý£º×óÉÏ½Ç×ø±ê£¨x1,y1£©,ÓÒÏÂ½Ç×ø±ê£¨x2£¬y2£©
    445          //      ÆäÖÐx1¡¢x2µÄ·¶Î§0¡«127£¬y1£¬y2µÄ·¶Î§0¡«63£¬¼´ÕæÊµ×ø±êÖµ
    446          //·µ»Ø£ºÎÞ
    447          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    448          void LCD_Rectangle(byte x1,byte y1,byte x2,byte y2,byte gif)
    449          {
   \                     LCD_Rectangle:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0005             MOVS     R5,R0
   \   00000006   0x000E             MOVS     R6,R1
   \   00000008   0x0017             MOVS     R7,R2
   \   0000000A   0x4698             MOV      R8,R3
   \   0000000C   0x9C08             LDR      R4,[SP, #+32]
    450          	byte n; 
    451          		
    452          	LCD_Set_Pos(x1,y1>>3);
   \   0000000E   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000010   0x08F1             LSRS     R1,R6,#+3
   \   00000012   0x0028             MOVS     R0,R5
   \   00000014   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000016   0x.... 0x....      BL       LCD_Set_Pos
    453          	for(n=x1;n<=x2;n++)
   \   0000001A   0x46A9             MOV      R9,R5
   \   0000001C   0xE012             B.N      ??LCD_Rectangle_0
    454          	{
    455          		LCD_WrDat(0x01<<(y1%8)); 			
   \                     ??LCD_Rectangle_1:
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2108             MOVS     R1,#+8
   \   00000024   0xFB96 0xF2F1      SDIV     R2,R6,R1
   \   00000028   0xFB02 0x6211      MLS      R2,R2,R1,R6
   \   0000002C   0x4090             LSLS     R0,R0,R2
   \   0000002E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000030   0x.... 0x....      BL       LCD_WrDat
    456          		if(gif == 1) 	LCD_DLY_ms(50);
   \   00000034   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000036   0x2C01             CMP      R4,#+1
   \   00000038   0xD102             BNE.N    ??LCD_Rectangle_2
   \   0000003A   0x2032             MOVS     R0,#+50
   \   0000003C   0x.... 0x....      BL       LCD_DLY_ms
    457          	}  
   \                     ??LCD_Rectangle_2:
   \   00000040   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_0:
   \   00000044   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000046   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004A   0x454F             CMP      R7,R9
   \   0000004C   0xD2E7             BCS.N    ??LCD_Rectangle_1
    458          	LCD_Set_Pos(x1,y2>>3);
   \   0000004E   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000052   0xEA5F 0x01D8      LSRS     R1,R8,#+3
   \   00000056   0x0028             MOVS     R0,R5
   \   00000058   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005A   0x.... 0x....      BL       LCD_Set_Pos
    459                  for(n=x1;n<=x2;n++)
   \   0000005E   0x46A9             MOV      R9,R5
   \   00000060   0xE013             B.N      ??LCD_Rectangle_3
    460          	{
    461          		LCD_WrDat(0x01<<(y2%8)); 			
   \                     ??LCD_Rectangle_4:
   \   00000062   0x2001             MOVS     R0,#+1
   \   00000064   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000068   0x2108             MOVS     R1,#+8
   \   0000006A   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006E   0xFB02 0x8211      MLS      R2,R2,R1,R8
   \   00000072   0x4090             LSLS     R0,R0,R2
   \   00000074   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000076   0x.... 0x....      BL       LCD_WrDat
    462          		if(gif == 1) 	LCD_DLY_ms(5);
   \   0000007A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000007C   0x2C01             CMP      R4,#+1
   \   0000007E   0xD102             BNE.N    ??LCD_Rectangle_5
   \   00000080   0x2005             MOVS     R0,#+5
   \   00000082   0x.... 0x....      BL       LCD_DLY_ms
    463          	}
   \                     ??LCD_Rectangle_5:
   \   00000086   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_Rectangle_3:
   \   0000008A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000008C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000090   0x454F             CMP      R7,R9
   \   00000092   0xD2E6             BCS.N    ??LCD_Rectangle_4
    464          	
    465          } 
   \   00000094   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    466          
    467          //==============================================================
    468          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û
    469          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û´®
    470          //·µ»Ø£ºÎÞ
    471          //=================LCD_Set_Pos============================================= 

   \                                 In section .text, align 2, keep-with-next
    472          void LCD_P6x8Cha(byte x,byte y,byte ucData) 
    473          {
   \                     LCD_P6x8Cha:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    474              byte i, ucDataTmp;       
    475              ucDataTmp = ucData-32;
   \   00000002   0xF1B2 0x0520      SUBS     R5,R2,#+32
    476              if(x > 126)
   \   00000006   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000008   0x287F             CMP      R0,#+127
   \   0000000A   0xD301             BCC.N    ??LCD_P6x8Cha_0
    477              {
    478                  x= 0;
   \   0000000C   0x2000             MOVS     R0,#+0
    479                  y++;
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
    480              }
    481              
    482              LCD_Set_Pos(x, y);
   \                     ??LCD_P6x8Cha_0:
   \   00000010   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000012   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000014   0x.... 0x....      BL       LCD_Set_Pos
    483              
    484              for(i = 0; i < 6; i++)
   \   00000018   0x2400             MOVS     R4,#+0
   \   0000001A   0xE00A             B.N      ??LCD_P6x8Cha_1
    485              {     
    486                  LCD_WrDat(F6x8[ucDataTmp][i]);  
   \                     ??LCD_P6x8Cha_2:
   \   0000001C   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2006             MOVS     R0,#+6
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable8_15
   \   00000026   0xFB00 0x1005      MLA      R0,R0,R5,R1
   \   0000002A   0x5C20             LDRB     R0,[R4, R0]
   \   0000002C   0x.... 0x....      BL       LCD_WrDat
    487              }
   \   00000030   0x1C64             ADDS     R4,R4,#+1
   \                     ??LCD_P6x8Cha_1:
   \   00000032   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000034   0x2C06             CMP      R4,#+6
   \   00000036   0xD3F1             BCC.N    ??LCD_P6x8Cha_2
    488          }
   \   00000038   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    489          
    490          //==============================================================
    491          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û´®
    492          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û´®
    493          //·µ»Ø£ºÎÞ
    494          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    495          void LCD_P6x8Str(byte x,byte y,byte ch[])
    496          {
   \                     LCD_P6x8Str:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    497            byte c=0,i=0,j=0;      
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE015             B.N      ??LCD_P6x8Str_0
    498            while (ch[j]!='\0')
    499            {    
    500              c =ch[j]-32;
    501              if(x>126){x=0;y++;}
    502              LCD_Set_Pos(x,y);    
    503            	for(i=0;i<6;i++)     
    504            	  LCD_WrDat(F6x8[c][i]);  
   \                     ??LCD_P6x8Str_1:
   \   00000016   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000001A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000001C   0x2006             MOVS     R0,#+6
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable8_15
   \   00000022   0xFB00 0x1007      MLA      R0,R0,R7,R1
   \   00000026   0xF818 0x0000      LDRB     R0,[R8, R0]
   \   0000002A   0x.... 0x....      BL       LCD_WrDat
   \   0000002E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P6x8Str_2:
   \   00000032   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000036   0xF1B8 0x0F06      CMP      R8,#+6
   \   0000003A   0xD3EC             BCC.N    ??LCD_P6x8Str_1
    505            	x+=6;
   \   0000003C   0x1DA4             ADDS     R4,R4,#+6
    506            	j++;
   \   0000003E   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P6x8Str_0:
   \   00000042   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000046   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   0000004A   0x2800             CMP      R0,#+0
   \   0000004C   0xD013             BEQ.N    ??LCD_P6x8Str_3
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000056   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   0000005A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000005C   0x2C7F             CMP      R4,#+127
   \   0000005E   0xD301             BCC.N    ??LCD_P6x8Str_4
   \   00000060   0x2400             MOVS     R4,#+0
   \   00000062   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P6x8Str_4:
   \   00000064   0x0029             MOVS     R1,R5
   \   00000066   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000068   0x0020             MOVS     R0,R4
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x.... 0x....      BL       LCD_Set_Pos
   \   00000070   0xF05F 0x0800      MOVS     R8,#+0
   \   00000074   0xE7DD             B.N      ??LCD_P6x8Str_2
    507            }
    508          }
   \                     ??LCD_P6x8Str_3:
   \   00000076   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    509          
    510          //==============================================================
    511          //º¯ÊýÃû£ºLCD_P6x8Num(byte x,byte y,byte *p)
    512          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û
    513          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÐÐ·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û´®
    514          //·µ»Ø£ºÎÞ
    515          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    516          void LCD_P6x8Num(byte x,byte y,float number)
    517          {
   \                     LCD_P6x8Num:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x0006             MOVS     R6,R0
   \   00000008   0x000C             MOVS     R4,R1
   \   0000000A   0x4691             MOV      R9,R2
    518            unsigned char i=0;
   \   0000000C   0x2700             MOVS     R7,#+0
    519            unsigned char temp[16];
    520            unsigned char *point=temp;
   \   0000000E   0xAD00             ADD      R5,SP,#+0
    521            float decimal;
    522            int data;
    523            
    524            if(number<0)
   \   00000010   0x4648             MOV      R0,R9
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000018   0xD20D             BCS.N    ??LCD_P6x8Num_0
    525              {
    526               temp[0]='-';
   \   0000001A   0x202D             MOVS     R0,#+45
   \   0000001C   0xF88D 0x0000      STRB     R0,[SP, #+0]
    527               LCD_P6x8Cha(x,y,temp[0]);
   \   00000020   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000024   0x0021             MOVS     R1,R4
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x0030             MOVS     R0,R6
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_P6x8Cha
    528               x+=6;
   \   00000030   0x1DB6             ADDS     R6,R6,#+6
    529               number=-number; 
   \   00000032   0xF099 0x4900      EORS     R9,R9,#0x80000000
    530              }
    531              
    532            data=(int)number;
   \                     ??LCD_P6x8Num_0:
   \   00000036   0x4648             MOV      R0,R9
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0x4680             MOV      R8,R0
    533            decimal=number-data;     //µÃµ½Ð¡Êý²¿·Ö
   \   0000003E   0x4640             MOV      R0,R8
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x4648             MOV      R0,R9
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
    534            
    535             
    536            if(data>=1000)           //ÊÇ·ñ¿É±»1000Õû³ý
   \   0000004C   0xF44F 0x717A      MOV      R1,#+1000
   \   00000050   0x4588             CMP      R8,R1
   \   00000052   0xDB0E             BLT.N    ??LCD_P6x8Num_1
    537              {
    538               temp[i]=48+data/1000;
   \   00000054   0xF44F 0x717A      MOV      R1,#+1000
   \   00000058   0xFB98 0xF1F1      SDIV     R1,R8,R1
   \   0000005C   0x3130             ADDS     R1,R1,#+48
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0xAA00             ADD      R2,SP,#+0
   \   00000062   0x54B9             STRB     R1,[R7, R2]
    539               data=data%1000;
   \   00000064   0xF44F 0x717A      MOV      R1,#+1000
   \   00000068   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006C   0xFB01 0x8812      MLS      R8,R1,R2,R8
    540               i++;
   \   00000070   0x1C7F             ADDS     R7,R7,#+1
    541              }
    542          
    543             
    544            if(data>=100)              //ÊÇ·ñ¿É±»100Õû³ý
   \                     ??LCD_P6x8Num_1:
   \   00000072   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000076   0xDB0D             BLT.N    ??LCD_P6x8Num_2
    545             {
    546              temp[i]=48+data/100;
   \   00000078   0x2164             MOVS     R1,#+100
   \   0000007A   0xFB98 0xF1F1      SDIV     R1,R8,R1
   \   0000007E   0x3130             ADDS     R1,R1,#+48
   \   00000080   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000082   0xAA00             ADD      R2,SP,#+0
   \   00000084   0x54B9             STRB     R1,[R7, R2]
    547              data=data%100;
   \   00000086   0x2164             MOVS     R1,#+100
   \   00000088   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000008C   0xFB01 0x8812      MLS      R8,R1,R2,R8
    548              i++;
   \   00000090   0x1C7F             ADDS     R7,R7,#+1
   \   00000092   0xE00A             B.N      ??LCD_P6x8Num_3
    549             }
    550            else 
    551              if(data<100&&i!=0)
   \                     ??LCD_P6x8Num_2:
   \   00000094   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000098   0xDA07             BGE.N    ??LCD_P6x8Num_3
   \   0000009A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000009C   0x2F00             CMP      R7,#+0
   \   0000009E   0xD004             BEQ.N    ??LCD_P6x8Num_3
    552               {
    553               temp[i]=0+48;
   \   000000A0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000A2   0xA900             ADD      R1,SP,#+0
   \   000000A4   0x2230             MOVS     R2,#+48
   \   000000A6   0x547A             STRB     R2,[R7, R1]
    554               i++;
   \   000000A8   0x1C7F             ADDS     R7,R7,#+1
    555               }
    556             
    557            if(data>=10)                  //ÊÇ·ñ¿É±»10Õû³ý
   \                     ??LCD_P6x8Num_3:
   \   000000AA   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000AE   0xDB0D             BLT.N    ??LCD_P6x8Num_4
    558              {
    559               temp[i]=48+data/10;
   \   000000B0   0x210A             MOVS     R1,#+10
   \   000000B2   0xFB98 0xF1F1      SDIV     R1,R8,R1
   \   000000B6   0x3130             ADDS     R1,R1,#+48
   \   000000B8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000BA   0xAA00             ADD      R2,SP,#+0
   \   000000BC   0x54B9             STRB     R1,[R7, R2]
    560               data=data%10;
   \   000000BE   0x210A             MOVS     R1,#+10
   \   000000C0   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   000000C4   0xFB01 0x8812      MLS      R8,R1,R2,R8
    561               i++;
   \   000000C8   0x1C7F             ADDS     R7,R7,#+1
   \   000000CA   0xE00A             B.N      ??LCD_P6x8Num_5
    562              }
    563            else 
    564              if(data<10&&i!=0)
   \                     ??LCD_P6x8Num_4:
   \   000000CC   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000D0   0xDA07             BGE.N    ??LCD_P6x8Num_5
   \   000000D2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000D4   0x2F00             CMP      R7,#+0
   \   000000D6   0xD004             BEQ.N    ??LCD_P6x8Num_5
    565               {
    566               temp[i]=48;
   \   000000D8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000DA   0xA900             ADD      R1,SP,#+0
   \   000000DC   0x2230             MOVS     R2,#+48
   \   000000DE   0x547A             STRB     R2,[R7, R1]
    567               i++;
   \   000000E0   0x1C7F             ADDS     R7,R7,#+1
    568               }
    569               
    570            temp[i]=48+data;
   \                     ??LCD_P6x8Num_5:
   \   000000E2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000E4   0xA900             ADD      R1,SP,#+0
   \   000000E6   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000EA   0x547A             STRB     R2,[R7, R1]
    571             
    572                
    573            if(decimal>=0.001)           //ÅÐ¶ÏÊÇ·ñÎªÐ¡Êý
   \   000000EC   0x....             LDR.N    R1,??DataTable8_16  ;; 0x3a83126f
   \   000000EE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000F2   0xD830             BHI.N    ??LCD_P6x8Num_6
    574             {
    575              i++;
   \   000000F4   0x1C7F             ADDS     R7,R7,#+1
    576              temp[i]='.';                //¼ÓÐ¡Êýµã
   \   000000F6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000F8   0xA900             ADD      R1,SP,#+0
   \   000000FA   0x222E             MOVS     R2,#+46
   \   000000FC   0x547A             STRB     R2,[R7, R1]
    577              i++;
   \   000000FE   0x1C7F             ADDS     R7,R7,#+1
    578              
    579              data=(int)(decimal*1000);
   \   00000100   0x....             LDR.N    R1,??DataTable8_17  ;; 0x447a0000
   \   00000102   0x.... 0x....      BL       __aeabi_fmul
   \   00000106   0x.... 0x....      BL       __aeabi_f2iz
   \   0000010A   0x4680             MOV      R8,R0
    580             
    581              temp[i]=48+data/100;
   \   0000010C   0x2064             MOVS     R0,#+100
   \   0000010E   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   00000112   0x3030             ADDS     R0,R0,#+48
   \   00000114   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000116   0xA900             ADD      R1,SP,#+0
   \   00000118   0x5478             STRB     R0,[R7, R1]
    582              
    583              data=data%100;
   \   0000011A   0x2064             MOVS     R0,#+100
   \   0000011C   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000120   0xFB00 0x8811      MLS      R8,R0,R1,R8
    584              i++;
   \   00000124   0x1C7F             ADDS     R7,R7,#+1
    585             
    586              if(data>0)
   \   00000126   0xF1B8 0x0F01      CMP      R8,#+1
   \   0000012A   0xDB0B             BLT.N    ??LCD_P6x8Num_7
    587                {
    588                 temp[i]=48+data/10;
   \   0000012C   0x200A             MOVS     R0,#+10
   \   0000012E   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   00000132   0x3030             ADDS     R0,R0,#+48
   \   00000134   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000136   0xA900             ADD      R1,SP,#+0
   \   00000138   0x5478             STRB     R0,[R7, R1]
    589                 data=data%10;
   \   0000013A   0x200A             MOVS     R0,#+10
   \   0000013C   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000140   0xFB00 0x8811      MLS      R8,R0,R1,R8
    590                 
    591                 
    592                }
    593                  if(data>=0)
   \                     ??LCD_P6x8Num_7:
   \   00000144   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000148   0xD405             BMI.N    ??LCD_P6x8Num_6
    594                {
    595                 i++;
   \   0000014A   0x1C7F             ADDS     R7,R7,#+1
    596                 temp[i]=data+48; 
   \   0000014C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000014E   0xA800             ADD      R0,SP,#+0
   \   00000150   0xF118 0x0130      ADDS     R1,R8,#+48
   \   00000154   0x5439             STRB     R1,[R7, R0]
    597                }
    598             }     
    599          
    600            i++;
   \                     ??LCD_P6x8Num_6:
   \   00000156   0x1C7F             ADDS     R7,R7,#+1
    601            temp[i]='\0';
   \   00000158   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000015A   0xA800             ADD      R0,SP,#+0
   \   0000015C   0x2100             MOVS     R1,#+0
   \   0000015E   0x5439             STRB     R1,[R7, R0]
    602              LCD_P6x8Str(x,y,point); 
   \   00000160   0x002A             MOVS     R2,R5
   \   00000162   0x0021             MOVS     R1,R4
   \   00000164   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000166   0x0030             MOVS     R0,R6
   \   00000168   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016A   0x.... 0x....      BL       LCD_P6x8Str
    603            
    604          }
   \   0000016E   0xB005             ADD      SP,SP,#+20
   \   00000170   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    605          
    606          
    607          //==============================================================
    608          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û
    609          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û
    610          //·µ»Ø£ºÎÞ
    611          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    612          void LCD_P8x16Cha(byte x,byte y,byte ch)
    613          {
   \                     LCD_P8x16Cha:
   \   00000000   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \   00000004   0x0006             MOVS     R6,R0
   \   00000006   0x000F             MOVS     R7,R1
    614              byte c=0,i=0,j=0;   
   \   00000008   0x2400             MOVS     R4,#+0
   \   0000000A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000000E   0x2500             MOVS     R5,#+0
    615              c =ch-32;
   \   00000010   0xF1B2 0x0020      SUBS     R0,R2,#+32
   \   00000014   0x0004             MOVS     R4,R0
    616              if(x>120){x=0;y++;}
   \   00000016   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000018   0x2E79             CMP      R6,#+121
   \   0000001A   0xD301             BCC.N    ??LCD_P8x16Cha_0
   \   0000001C   0x2600             MOVS     R6,#+0
   \   0000001E   0x1C7F             ADDS     R7,R7,#+1
    617              LCD_Set_Pos(x,y);    
   \                     ??LCD_P8x16Cha_0:
   \   00000020   0x0039             MOVS     R1,R7
   \   00000022   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000024   0x0030             MOVS     R0,R6
   \   00000026   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000028   0x.... 0x....      BL       LCD_Set_Pos
    618            	for(i=0;i<8;i++)     
   \   0000002C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000030   0xE009             B.N      ??LCD_P8x16Cha_1
    619            	  LCD_WrDat(F8X16[c*16+i]);
   \                     ??LCD_P8x16Cha_2:
   \   00000032   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000034   0x0120             LSLS     R0,R4,#+4
   \   00000036   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000003A   0x....             LDR.N    R1,??DataTable8_18
   \   0000003C   0x5C40             LDRB     R0,[R0, R1]
   \   0000003E   0x.... 0x....      BL       LCD_WrDat
   \   00000042   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Cha_1:
   \   00000046   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000004A   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000004E   0xD3F0             BCC.N    ??LCD_P8x16Cha_2
    620            	LCD_Set_Pos(x,y+1);    
   \   00000050   0x1C79             ADDS     R1,R7,#+1
   \   00000052   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000054   0x0030             MOVS     R0,R6
   \   00000056   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000058   0x.... 0x....      BL       LCD_Set_Pos
    621            	for(i=0;i<8;i++)     
   \   0000005C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000060   0xE00A             B.N      ??LCD_P8x16Cha_3
    622            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Cha_4:
   \   00000062   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000064   0x0120             LSLS     R0,R4,#+4
   \   00000066   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000006A   0x....             LDR.N    R1,??DataTable8_18
   \   0000006C   0x1840             ADDS     R0,R0,R1
   \   0000006E   0x7A00             LDRB     R0,[R0, #+8]
   \   00000070   0x.... 0x....      BL       LCD_WrDat
   \   00000074   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Cha_3:
   \   00000078   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   0000007C   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000080   0xD3EF             BCC.N    ??LCD_P8x16Cha_4
    623            	x+=8;
   \   00000082   0x3608             ADDS     R6,R6,#+8
    624            	j++;
   \   00000084   0x1C6D             ADDS     R5,R5,#+1
    625           
    626          }
   \   00000086   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
    627          //==============================================================
    628          //¹¦ÄÜÃèÊö£ºÐ´ÈëÒ»×é±ê×¼ASCII×Ö·û´®
    629          //²ÎÊý£ºÏÔÊ¾µÄÎ»ÖÃ£¨x,y£©£¬yÎªÒ³·¶Î§0¡«7£¬ÒªÏÔÊ¾µÄ×Ö·û´®
    630          //·µ»Ø£ºÎÞ
    631          //==============================================================  

   \                                 In section .text, align 2, keep-with-next
    632          void LCD_P8x16Str(byte x,byte y,byte ch[])
    633          {
   \                     LCD_P8x16Str:
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
    634            byte c=0,i=0,j=0;
   \   0000000A   0x2700             MOVS     R7,#+0
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF05F 0x0900      MOVS     R9,#+0
   \   00000014   0xE012             B.N      ??LCD_P8x16Str_0
    635                  
    636            while (ch[j]!='\0')
    637            {    
    638              c =ch[j]-32;
    639              if(x>120){x=0;y++;}
    640              LCD_Set_Pos(x,y);    
    641            	for(i=0;i<8;i++)     
    642            	  LCD_WrDat(F8X16[c*16+i]);
    643            	LCD_Set_Pos(x,y+1);    
    644            	for(i=0;i<8;i++)     
    645            	  LCD_WrDat(F8X16[c*16+i+8]);  
   \                     ??LCD_P8x16Str_1:
   \   00000016   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000018   0x0138             LSLS     R0,R7,#+4
   \   0000001A   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   0000001E   0x....             LDR.N    R1,??DataTable8_18
   \   00000020   0x1840             ADDS     R0,R0,R1
   \   00000022   0x7A00             LDRB     R0,[R0, #+8]
   \   00000024   0x.... 0x....      BL       LCD_WrDat
   \   00000028   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_2:
   \   0000002C   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000030   0xF1B8 0x0F08      CMP      R8,#+8
   \   00000034   0xD3EF             BCC.N    ??LCD_P8x16Str_1
    646            	x+=8;
   \   00000036   0x3408             ADDS     R4,R4,#+8
    647            	j++;
   \   00000038   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??LCD_P8x16Str_0:
   \   0000003C   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000040   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD02B             BEQ.N    ??LCD_P8x16Str_3
   \   00000048   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   0000004C   0xF819 0x0006      LDRB     R0,[R9, R6]
   \   00000050   0xF1B0 0x0720      SUBS     R7,R0,#+32
   \   00000054   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   00000056   0x2C79             CMP      R4,#+121
   \   00000058   0xD301             BCC.N    ??LCD_P8x16Str_4
   \   0000005A   0x2400             MOVS     R4,#+0
   \   0000005C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??LCD_P8x16Str_4:
   \   0000005E   0x0029             MOVS     R1,R5
   \   00000060   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000062   0x0020             MOVS     R0,R4
   \   00000064   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000066   0x.... 0x....      BL       LCD_Set_Pos
   \   0000006A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000006E   0xE009             B.N      ??LCD_P8x16Str_5
   \                     ??LCD_P8x16Str_6:
   \   00000070   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000072   0x0138             LSLS     R0,R7,#+4
   \   00000074   0xFA50 0xF088      UXTAB    R0,R0,R8
   \   00000078   0x....             LDR.N    R1,??DataTable8_18
   \   0000007A   0x5C40             LDRB     R0,[R0, R1]
   \   0000007C   0x.... 0x....      BL       LCD_WrDat
   \   00000080   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??LCD_P8x16Str_5:
   \   00000084   0xFA5F 0xF888      UXTB     R8,R8            ;; ZeroExt  R8,R8,#+24,#+24
   \   00000088   0xF1B8 0x0F08      CMP      R8,#+8
   \   0000008C   0xD3F0             BCC.N    ??LCD_P8x16Str_6
   \   0000008E   0x1C69             ADDS     R1,R5,#+1
   \   00000090   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000092   0x0020             MOVS     R0,R4
   \   00000094   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000096   0x.... 0x....      BL       LCD_Set_Pos
   \   0000009A   0xF05F 0x0800      MOVS     R8,#+0
   \   0000009E   0xE7C5             B.N      ??LCD_P8x16Str_2
    648            }
    649          }
   \                     ??LCD_P8x16Str_3:
   \   000000A0   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    650          /****************************************************************
    651                             Ð´8*16µãÕóÊý×Öº¯Êý
    652          ****************************************************************/

   \                                 In section .text, align 2, keep-with-next
    653          void LCD_P8x16Num(unsigned char x,unsigned char y, float number)
    654          {
   \                     LCD_P8x16Num:
   \   00000000   0xE92D 0x43F0      PUSH     {R4-R9,LR}
   \   00000004   0xB085             SUB      SP,SP,#+20
   \   00000006   0x0006             MOVS     R6,R0
   \   00000008   0x000C             MOVS     R4,R1
   \   0000000A   0x4691             MOV      R9,R2
    655            unsigned char i=0;
   \   0000000C   0x2700             MOVS     R7,#+0
    656            unsigned char temp[16];
    657            unsigned char *point=temp;
   \   0000000E   0xAD00             ADD      R5,SP,#+0
    658            float decimal;
    659            int data;
    660            
    661            if(number<0)
   \   00000010   0x4648             MOV      R0,R9
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x.... 0x....      BL       __aeabi_cfcmple
   \   00000018   0xD20D             BCS.N    ??LCD_P8x16Num_0
    662              {
    663               temp[0]='-';
   \   0000001A   0x202D             MOVS     R0,#+45
   \   0000001C   0xF88D 0x0000      STRB     R0,[SP, #+0]
    664               LCD_P8x16Cha(x,y,temp[0]);
   \   00000020   0xF89D 0x2000      LDRB     R2,[SP, #+0]
   \   00000024   0x0021             MOVS     R1,R4
   \   00000026   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000028   0x0030             MOVS     R0,R6
   \   0000002A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000002C   0x.... 0x....      BL       LCD_P8x16Cha
    665               x+=1;
   \   00000030   0x1C76             ADDS     R6,R6,#+1
    666               number=-number; 
   \   00000032   0xF099 0x4900      EORS     R9,R9,#0x80000000
    667              }
    668              
    669            data=(int)number;
   \                     ??LCD_P8x16Num_0:
   \   00000036   0x4648             MOV      R0,R9
   \   00000038   0x.... 0x....      BL       __aeabi_f2iz
   \   0000003C   0x4680             MOV      R8,R0
    670            decimal=number-data;     //µÃµ½Ð¡Êý²¿·Ö
   \   0000003E   0x4640             MOV      R0,R8
   \   00000040   0x.... 0x....      BL       __aeabi_i2f
   \   00000044   0x0001             MOVS     R1,R0
   \   00000046   0x4648             MOV      R0,R9
   \   00000048   0x.... 0x....      BL       __aeabi_fsub
    671            
    672             
    673            if(data>=1000)           //ÊÇ·ñ¿É±»1000Õû³ý
   \   0000004C   0xF44F 0x717A      MOV      R1,#+1000
   \   00000050   0x4588             CMP      R8,R1
   \   00000052   0xDB0E             BLT.N    ??LCD_P8x16Num_1
    674              {
    675               temp[i]=48+data/1000;
   \   00000054   0xF44F 0x717A      MOV      R1,#+1000
   \   00000058   0xFB98 0xF1F1      SDIV     R1,R8,R1
   \   0000005C   0x3130             ADDS     R1,R1,#+48
   \   0000005E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000060   0xAA00             ADD      R2,SP,#+0
   \   00000062   0x54B9             STRB     R1,[R7, R2]
    676               data=data%1000;
   \   00000064   0xF44F 0x717A      MOV      R1,#+1000
   \   00000068   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000006C   0xFB01 0x8812      MLS      R8,R1,R2,R8
    677               i++;
   \   00000070   0x1C7F             ADDS     R7,R7,#+1
    678              }
    679          
    680             
    681            if(data>=100)              //ÊÇ·ñ¿É±»100Õû³ý
   \                     ??LCD_P8x16Num_1:
   \   00000072   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000076   0xDB0D             BLT.N    ??LCD_P8x16Num_2
    682             {
    683              temp[i]=48+data/100;
   \   00000078   0x2164             MOVS     R1,#+100
   \   0000007A   0xFB98 0xF1F1      SDIV     R1,R8,R1
   \   0000007E   0x3130             ADDS     R1,R1,#+48
   \   00000080   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000082   0xAA00             ADD      R2,SP,#+0
   \   00000084   0x54B9             STRB     R1,[R7, R2]
    684              data=data%100;
   \   00000086   0x2164             MOVS     R1,#+100
   \   00000088   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   0000008C   0xFB01 0x8812      MLS      R8,R1,R2,R8
    685              i++;
   \   00000090   0x1C7F             ADDS     R7,R7,#+1
   \   00000092   0xE00A             B.N      ??LCD_P8x16Num_3
    686             }
    687            else 
    688              if(data<100&&i!=0)
   \                     ??LCD_P8x16Num_2:
   \   00000094   0xF1B8 0x0F64      CMP      R8,#+100
   \   00000098   0xDA07             BGE.N    ??LCD_P8x16Num_3
   \   0000009A   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000009C   0x2F00             CMP      R7,#+0
   \   0000009E   0xD004             BEQ.N    ??LCD_P8x16Num_3
    689               {
    690               temp[i]=0+48;
   \   000000A0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000A2   0xA900             ADD      R1,SP,#+0
   \   000000A4   0x2230             MOVS     R2,#+48
   \   000000A6   0x547A             STRB     R2,[R7, R1]
    691               i++;
   \   000000A8   0x1C7F             ADDS     R7,R7,#+1
    692               }
    693             
    694            if(data>=10)                  //ÊÇ·ñ¿É±»10Õû³ý
   \                     ??LCD_P8x16Num_3:
   \   000000AA   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000AE   0xDB0D             BLT.N    ??LCD_P8x16Num_4
    695              {
    696               temp[i]=48+data/10;
   \   000000B0   0x210A             MOVS     R1,#+10
   \   000000B2   0xFB98 0xF1F1      SDIV     R1,R8,R1
   \   000000B6   0x3130             ADDS     R1,R1,#+48
   \   000000B8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000BA   0xAA00             ADD      R2,SP,#+0
   \   000000BC   0x54B9             STRB     R1,[R7, R2]
    697               data=data%10;
   \   000000BE   0x210A             MOVS     R1,#+10
   \   000000C0   0xFB98 0xF2F1      SDIV     R2,R8,R1
   \   000000C4   0xFB01 0x8812      MLS      R8,R1,R2,R8
    698               i++;
   \   000000C8   0x1C7F             ADDS     R7,R7,#+1
   \   000000CA   0xE00A             B.N      ??LCD_P8x16Num_5
    699              }
    700            else 
    701              if(data<10&&i!=0)
   \                     ??LCD_P8x16Num_4:
   \   000000CC   0xF1B8 0x0F0A      CMP      R8,#+10
   \   000000D0   0xDA07             BGE.N    ??LCD_P8x16Num_5
   \   000000D2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000D4   0x2F00             CMP      R7,#+0
   \   000000D6   0xD004             BEQ.N    ??LCD_P8x16Num_5
    702               {
    703               temp[i]=48;
   \   000000D8   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000DA   0xA900             ADD      R1,SP,#+0
   \   000000DC   0x2230             MOVS     R2,#+48
   \   000000DE   0x547A             STRB     R2,[R7, R1]
    704               i++;
   \   000000E0   0x1C7F             ADDS     R7,R7,#+1
    705               }
    706               
    707            temp[i]=48+data;
   \                     ??LCD_P8x16Num_5:
   \   000000E2   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000E4   0xA900             ADD      R1,SP,#+0
   \   000000E6   0xF118 0x0230      ADDS     R2,R8,#+48
   \   000000EA   0x547A             STRB     R2,[R7, R1]
    708             
    709                
    710            if(decimal>=0.0001)           //ÅÐ¶ÏÊÇ·ñÎªÐ¡Êý
   \   000000EC   0x....             LDR.N    R1,??DataTable8_19  ;; 0x38d1b718
   \   000000EE   0x.... 0x....      BL       __aeabi_cfrcmple
   \   000000F2   0xD830             BHI.N    ??LCD_P8x16Num_6
    711             {
    712              i++;
   \   000000F4   0x1C7F             ADDS     R7,R7,#+1
    713              temp[i]='.';                //¼ÓÐ¡Êýµã
   \   000000F6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000000F8   0xA900             ADD      R1,SP,#+0
   \   000000FA   0x222E             MOVS     R2,#+46
   \   000000FC   0x547A             STRB     R2,[R7, R1]
    714              i++;
   \   000000FE   0x1C7F             ADDS     R7,R7,#+1
    715              
    716              data=(int)(decimal*1000);
   \   00000100   0x....             LDR.N    R1,??DataTable8_17  ;; 0x447a0000
   \   00000102   0x.... 0x....      BL       __aeabi_fmul
   \   00000106   0x.... 0x....      BL       __aeabi_f2iz
   \   0000010A   0x4680             MOV      R8,R0
    717             
    718              temp[i]=48+data/100;
   \   0000010C   0x2064             MOVS     R0,#+100
   \   0000010E   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   00000112   0x3030             ADDS     R0,R0,#+48
   \   00000114   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000116   0xA900             ADD      R1,SP,#+0
   \   00000118   0x5478             STRB     R0,[R7, R1]
    719              
    720              data=data%100;
   \   0000011A   0x2064             MOVS     R0,#+100
   \   0000011C   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000120   0xFB00 0x8811      MLS      R8,R0,R1,R8
    721              i++;
   \   00000124   0x1C7F             ADDS     R7,R7,#+1
    722             
    723              if(data>0)
   \   00000126   0xF1B8 0x0F01      CMP      R8,#+1
   \   0000012A   0xDB0B             BLT.N    ??LCD_P8x16Num_7
    724                {
    725                 temp[i]=48+data/10;
   \   0000012C   0x200A             MOVS     R0,#+10
   \   0000012E   0xFB98 0xF0F0      SDIV     R0,R8,R0
   \   00000132   0x3030             ADDS     R0,R0,#+48
   \   00000134   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000136   0xA900             ADD      R1,SP,#+0
   \   00000138   0x5478             STRB     R0,[R7, R1]
    726                 data=data%10;
   \   0000013A   0x200A             MOVS     R0,#+10
   \   0000013C   0xFB98 0xF1F0      SDIV     R1,R8,R0
   \   00000140   0xFB00 0x8811      MLS      R8,R0,R1,R8
    727                 
    728                 
    729                }
    730              if(data>=0)
   \                     ??LCD_P8x16Num_7:
   \   00000144   0xF1B8 0x0F00      CMP      R8,#+0
   \   00000148   0xD405             BMI.N    ??LCD_P8x16Num_6
    731                {
    732                 i++;
   \   0000014A   0x1C7F             ADDS     R7,R7,#+1
    733                 temp[i]=data+48; 
   \   0000014C   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000014E   0xA800             ADD      R0,SP,#+0
   \   00000150   0xF118 0x0130      ADDS     R1,R8,#+48
   \   00000154   0x5439             STRB     R1,[R7, R0]
    734                }
    735              
    736             }     
    737          
    738            i++;
   \                     ??LCD_P8x16Num_6:
   \   00000156   0x1C7F             ADDS     R7,R7,#+1
    739            temp[i]='\0';
   \   00000158   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   0000015A   0xA800             ADD      R0,SP,#+0
   \   0000015C   0x2100             MOVS     R1,#+0
   \   0000015E   0x5439             STRB     R1,[R7, R0]
    740              LCD_P8x16Str(x,y,point); 
   \   00000160   0x002A             MOVS     R2,R5
   \   00000162   0x0021             MOVS     R1,R4
   \   00000164   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   00000166   0x0030             MOVS     R0,R6
   \   00000168   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016A   0x.... 0x....      BL       LCD_P8x16Str
    741            
    742          }
   \   0000016E   0xB005             ADD      SP,SP,#+20
   \   00000170   0xE8BD 0x83F0      POP      {R4-R9,PC}       ;; return
    743          
    744          //==============================================================
    745          //º¯ÊýÃû£º void Draw_BMP(byte x,byte y)
    746          //¹¦ÄÜÃèÊö£ºÏÔÊ¾BMPÍ¼Æ¬128¡Á64
    747          //²ÎÊý£ºÆðÊ¼µã×ø±ê(x,y),xµÄ·¶Î§0¡«127£¬yÎªÒ³µÄ·¶Î§0¡«7
    748          //·µ»Ø£ºÎÞ
    749          //==============================================================

   \                                 In section .text, align 2, keep-with-next
    750          void Draw_BMP(byte x0,byte y0,byte x1,byte y1,byte bmp[])
    751          { 	
   \                     Draw_BMP:
   \   00000000   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x0015             MOVS     R5,R2
   \   00000008   0x001E             MOVS     R6,R3
   \   0000000A   0x9F08             LDR      R7,[SP, #+32]
    752            word ii=0;
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
    753            byte x,y;
    754            
    755            if(y1%8==0) y=y1/8;      
   \   00000010   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000012   0x2008             MOVS     R0,#+8
   \   00000014   0xFB96 0xF2F0      SDIV     R2,R6,R0
   \   00000018   0xFB02 0x6210      MLS      R2,R2,R0,R6
   \   0000001C   0x2A00             CMP      R2,#+0
   \   0000001E   0xD104             BNE.N    ??Draw_BMP_0
   \   00000020   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   00000022   0x2008             MOVS     R0,#+8
   \   00000024   0xFB96 0xFAF0      SDIV     R10,R6,R0
   \   00000028   0xE005             B.N      ??Draw_BMP_1
    756            else y=y1/8+1;
   \                     ??Draw_BMP_0:
   \   0000002A   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000002C   0x2008             MOVS     R0,#+8
   \   0000002E   0xFB96 0xF0F0      SDIV     R0,R6,R0
   \   00000032   0xF110 0x0A01      ADDS     R10,R0,#+1
    757          	for(y=y0;y<=y1;y++)
   \                     ??Draw_BMP_1:
   \   00000036   0x468A             MOV      R10,R1
   \   00000038   0xE010             B.N      ??Draw_BMP_2
    758          	{
    759          		LCD_Set_Pos(x0,y);				
    760              for(x=x0;x<x1;x++)
    761          	    {      
    762          	    	LCD_WrDat(bmp[ii++]);	    	
   \                     ??Draw_BMP_3:
   \   0000003A   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \   0000003E   0xF818 0x0007      LDRB     R0,[R8, R7]
   \   00000042   0x.... 0x....      BL       LCD_WrDat
   \   00000046   0xF118 0x0801      ADDS     R8,R8,#+1
    763          	    }
   \   0000004A   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??Draw_BMP_4:
   \   0000004E   0xFA5F 0xF989      UXTB     R9,R9            ;; ZeroExt  R9,R9,#+24,#+24
   \   00000052   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000054   0x45A9             CMP      R9,R5
   \   00000056   0xD3F0             BCC.N    ??Draw_BMP_3
   \   00000058   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??Draw_BMP_2:
   \   0000005C   0xB2F6             UXTB     R6,R6            ;; ZeroExt  R6,R6,#+24,#+24
   \   0000005E   0xFA5F 0xFA8A      UXTB     R10,R10          ;; ZeroExt  R10,R10,#+24,#+24
   \   00000062   0x4556             CMP      R6,R10
   \   00000064   0xD307             BCC.N    ??Draw_BMP_5
   \   00000066   0x4651             MOV      R1,R10
   \   00000068   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \   0000006A   0x0020             MOVS     R0,R4
   \   0000006C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006E   0x.... 0x....      BL       LCD_Set_Pos
   \   00000072   0x46A1             MOV      R9,R4
   \   00000074   0xE7EB             B.N      ??Draw_BMP_4
    764          	}
    765          } 
   \                     ??Draw_BMP_5:
   \   00000076   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x4004B020         DC32     0x4004b020

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x4004B024         DC32     0x4004b024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x4004B028         DC32     0x4004b028

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x4004B02C         DC32     0x4004b02c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x4004B030         DC32     0x4004b030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x4004B034         DC32     0x4004b034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x4004B038         DC32     0x4004b038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x4004B03C         DC32     0x4004b03c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x400FF094         DC32     0x400ff094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x40049038         DC32     0x40049038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x4004903C         DC32     0x4004903c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x40049040         DC32     0x40049040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x40049044         DC32     0x40049044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x400FF014         DC32     0x400ff014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     F6x8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x3A83126F         DC32     0x3a83126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x........         DC32     F8X16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x38D1B718         DC32     0x38d1b718

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       32  Draw_BMP
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       16  LCD_CLS
             16 -> LCD_WrCmd
             16 -> LCD_WrDat
       16  LCD_CLS_ROW
             16 -> LCD_Set_Pos
             16 -> LCD_WrCmd
             16 -> LCD_WrDat
        0  LCD_DLY_ms
       16  LCD_Fill
             16 -> LCD_WrCmd
             16 -> LCD_WrDat
        8  LCD_IO_Init
              8 -> LCD_DLY_ms
        8  LCD_Init
              8 -> LCD_Fill
              8 -> LCD_Set_Pos
              8 -> LCD_WrCmd
       16  LCD_P6x8Cha
             16 -> LCD_Set_Pos
             16 -> LCD_WrDat
       48  LCD_P6x8Num
             48 -> LCD_P6x8Cha
             48 -> LCD_P6x8Str
             48 -> __aeabi_cfcmple
             48 -> __aeabi_cfrcmple
             48 -> __aeabi_f2iz
             48 -> __aeabi_fmul
             48 -> __aeabi_fsub
             48 -> __aeabi_i2f
       32  LCD_P6x8Str
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       24  LCD_P8x16Cha
             24 -> LCD_Set_Pos
             24 -> LCD_WrDat
       48  LCD_P8x16Num
             48 -> LCD_P8x16Cha
             48 -> LCD_P8x16Str
             48 -> __aeabi_cfcmple
             48 -> __aeabi_cfrcmple
             48 -> __aeabi_f2iz
             48 -> __aeabi_fmul
             48 -> __aeabi_fsub
             48 -> __aeabi_i2f
       32  LCD_P8x16Str
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
       16  LCD_PutPixel
             16 -> LCD_Set_Pos_Pixel
             16 -> LCD_WrCmd
             16 -> LCD_WrDat
       32  LCD_Rectangle
             32 -> LCD_DLY_ms
             32 -> LCD_Set_Pos
             32 -> LCD_WrDat
        8  LCD_Set_Pos
              8 -> LCD_WrCmd
        8  LCD_Set_Pos_Pixel
              8 -> LCD_WrCmd
        0  LCD_WrCmd
        0  LCD_WrDat


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
     122  Draw_BMP
     552  F6x8
    1520  F8X16
      56  LCD_CLS
      58  LCD_CLS_ROW
      26  LCD_DLY_ms
      60  LCD_Fill
     294  LCD_IO_Init
     186  LCD_Init
      58  LCD_P6x8Cha
     372  LCD_P6x8Num
     122  LCD_P6x8Str
     138  LCD_P8x16Cha
     372  LCD_P8x16Num
     164  LCD_P8x16Str
      80  LCD_PutPixel
     152  LCD_Rectangle
      44  LCD_Set_Pos
      44  LCD_Set_Pos_Pixel
     122  LCD_WrCmd
     126  LCD_WrDat

 
 2 072 bytes in section .rodata
 2 676 bytes in section .text
 
 2 676 bytes of CODE  memory
 2 072 bytes of CONST memory

Errors: none
Warnings: none
